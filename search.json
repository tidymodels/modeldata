[{"path":[]},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://modeldata.tidymodels.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://modeldata.tidymodels.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 modeldata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://modeldata.tidymodels.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Kuhn. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://modeldata.tidymodels.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuhn M (2024). modeldata: Data Sets Useful Modeling Examples. R package version 1.4.0,  https://github.com/tidymodels/modeldata, https://modeldata.tidymodels.org.","code":"@Manual{,   title = {modeldata: Data Sets Useful for Modeling Examples},   author = {Max Kuhn},   year = {2024},   note = {R package version 1.4.0,  https://github.com/tidymodels/modeldata},   url = {https://modeldata.tidymodels.org}, }"},{"path":"https://modeldata.tidymodels.org/index.html","id":"modeldata","dir":"","previous_headings":"","what":"Data Sets Useful for Modeling Examples","title":"Data Sets Useful for Modeling Examples","text":"modeldata contains data sets used documentation testing tidymodels packages. package also contains suite simulation functions classification regression data.","code":""},{"path":"https://modeldata.tidymodels.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Sets Useful for Modeling Examples","text":"can install released version modeldata CRAN : development version GitHub :","code":"install.packages(\"modeldata\") # install.packages(\"pak\") pak::pak(\"tidymodels/modeldata\")"},{"path":"https://modeldata.tidymodels.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Data Sets Useful for Modeling Examples","text":"project released Contributor Code Conduct. contributing project, agree abide terms. questions discussions tidymodels packages, modeling, machine learning, please post RStudio Community. think encountered bug, please submit issue. Either way, learn create share reprex (minimal, reproducible example), clearly communicate code. Check details contributing guidelines tidymodels packages get help.","code":""},{"path":"https://modeldata.tidymodels.org/reference/Chicago.html","id":null,"dir":"Reference","previous_headings":"","what":"Chicago ridership data — Chicago","title":"Chicago ridership data — Chicago","text":"Chicago ridership data","code":""},{"path":"https://modeldata.tidymodels.org/reference/Chicago.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chicago ridership data — Chicago","text":"Kuhn Johnson (2020), Feature Engineering Selection, Chapman Hall/CRC . https://bookdown.org/max/FES/ https://github.com/topepo/FES","code":""},{"path":"https://modeldata.tidymodels.org/reference/Chicago.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chicago ridership data — Chicago","text":"Chicago tibble stations vector station names","code":""},{"path":"https://modeldata.tidymodels.org/reference/Chicago.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chicago ridership data — Chicago","text":"data Kuhn Johnson (2020) contain abbreviated training set modeling number people (thousands) enter Clark Lake L station. date column corresponds current date. columns station names (Austin California) sample columns used original analysis (file size reasons). 14 day lag variables (.e. date - 14 days). columns related weather sports team schedules. station 35th Archer contained column Archer_35th make valid R column name.","code":""},{"path":"https://modeldata.tidymodels.org/reference/Chicago.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chicago ridership data — Chicago","text":"","code":"data(Chicago) str(Chicago) #> tibble [5,698 × 50] (S3: tbl_df/tbl/data.frame) #>  $ ridership       : num [1:5698] 15.7 15.8 15.9 15.9 15.4 ... #>  $ Austin          : num [1:5698] 1.46 1.5 1.52 1.49 1.5 ... #>  $ Quincy_Wells    : num [1:5698] 8.37 8.35 8.36 7.85 7.62 ... #>  $ Belmont         : num [1:5698] 4.6 4.72 4.68 4.77 4.72 ... #>  $ Archer_35th     : num [1:5698] 2.01 2.09 2.11 2.17 2.06 ... #>  $ Oak_Park        : num [1:5698] 1.42 1.43 1.49 1.45 1.42 ... #>  $ Western         : num [1:5698] 3.32 3.34 3.36 3.36 3.27 ... #>  $ Clark_Lake      : num [1:5698] 15.6 15.7 15.6 15.7 15.6 ... #>  $ Clinton         : num [1:5698] 2.4 2.4 2.37 2.42 2.42 ... #>  $ Merchandise_Mart: num [1:5698] 6.48 6.48 6.41 6.49 5.8 ... #>  $ Irving_Park     : num [1:5698] 3.74 3.85 3.86 3.84 3.88 ... #>  $ Washington_Wells: num [1:5698] 7.56 7.58 7.62 7.36 7.09 ... #>  $ Harlem          : num [1:5698] 2.65 2.76 2.79 2.81 2.73 ... #>  $ Monroe          : num [1:5698] 5.67 6.01 5.79 5.96 5.77 ... #>  $ Polk            : num [1:5698] 2.48 2.44 2.53 2.45 2.57 ... #>  $ Ashland         : num [1:5698] 1.32 1.31 1.32 1.35 1.35 ... #>  $ Kedzie          : num [1:5698] 3.01 3.02 2.98 3.01 3.08 ... #>  $ Addison         : num [1:5698] 2.5 2.57 2.59 2.53 2.56 ... #>  $ Jefferson_Park  : num [1:5698] 6.59 6.75 6.97 7.01 6.92 ... #>  $ Montrose        : num [1:5698] 1.84 1.92 1.98 1.98 1.95 ... #>  $ California      : num [1:5698] 0.756 0.781 0.812 0.776 0.789 0.37 0.274 0.473 0.844 0.835 ... #>  $ temp_min        : num [1:5698] 15.1 25 19 15.1 21 19 15.1 26.6 34 33.1 ... #>  $ temp            : num [1:5698] 19.4 30.4 25 22.4 27 ... #>  $ temp_max        : num [1:5698] 30 36 28.9 27 32 30 28.9 41 43 36 ... #>  $ temp_change     : num [1:5698] 14.9 11 9.9 11.9 11 11 13.8 14.4 9 2.9 ... #>  $ dew             : num [1:5698] 13.4 25 18 10.9 21.9 ... #>  $ humidity        : num [1:5698] 78 79 81 66.5 84 71 74 93 93 89 ... #>  $ pressure        : num [1:5698] 30.4 30.2 30.2 30.4 29.9 ... #>  $ pressure_change : num [1:5698] 0.12 0.18 0.23 0.16 0.65 ... #>  $ wind            : num [1:5698] 5.2 8.1 10.4 9.8 12.7 12.7 8.1 8.1 9.2 11.5 ... #>  $ wind_max        : num [1:5698] 10.4 11.5 19.6 16.1 19.6 17.3 13.8 17.3 23 16.1 ... #>  $ gust            : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ gust_max        : num [1:5698] 0 0 0 0 25.3 26.5 0 26.5 31.1 0 ... #>  $ percip          : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ percip_max      : num [1:5698] 0 0 0 0 0 0 0 0.07 0.11 0.01 ... #>  $ weather_rain    : num [1:5698] 0 0 0 0 0 ... #>  $ weather_snow    : num [1:5698] 0 0 0.214 0 0.516 ... #>  $ weather_cloud   : num [1:5698] 0.708 1 0.357 0.292 0.452 ... #>  $ weather_storm   : num [1:5698] 0 0.2083 0.0714 0.0417 0.4516 ... #>  $ Blackhawks_Away : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Blackhawks_Home : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Bulls_Away      : num [1:5698] 0 0 1 0 0 0 0 0 1 0 ... #>  $ Bulls_Home      : num [1:5698] 0 1 0 0 0 1 0 0 0 0 ... #>  $ Bears_Away      : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Bears_Home      : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ WhiteSox_Away   : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ WhiteSox_Home   : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Cubs_Away       : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Cubs_Home       : num [1:5698] 0 0 0 0 0 0 0 0 0 0 ... #>  $ date            : Date[1:5698], format: \"2001-01-22\" \"2001-01-23\" ... stations #>  [1] \"Austin\"           \"Quincy_Wells\"     \"Belmont\"          #>  [4] \"Archer_35th\"      \"Oak_Park\"         \"Western\"          #>  [7] \"Clark_Lake\"       \"Clinton\"          \"Merchandise_Mart\" #> [10] \"Irving_Park\"      \"Washington_Wells\" \"Harlem\"           #> [13] \"Monroe\"           \"Polk\"             \"Ashland\"          #> [16] \"Kedzie\"           \"Addison\"          \"Jefferson_Park\"   #> [19] \"Montrose\"         \"California\""},{"path":"https://modeldata.tidymodels.org/reference/Sacramento.html","id":null,"dir":"Reference","previous_headings":"","what":"Sacramento CA home prices — Sacramento","title":"Sacramento CA home prices — Sacramento","text":"data frame contains house sale price data 932 homes Sacramento CA.  original data obtained website SpatialKey software. website: \"Sacramento real estate transactions file list 985 real estate transactions Sacramento area reported five-day period, reported Sacramento Bee.\" Google used fill missing/incorrect data.","code":""},{"path":"https://modeldata.tidymodels.org/reference/Sacramento.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sacramento CA home prices — Sacramento","text":"SpatialKey website: https://support.spatialkey.com/spatialkey-sample-csv-data/","code":""},{"path":"https://modeldata.tidymodels.org/reference/Sacramento.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sacramento CA home prices — Sacramento","text":"Sacramento tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/Sacramento.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sacramento CA home prices — Sacramento","text":"","code":"data(Sacramento) str(Sacramento) #> tibble [932 × 9] (S3: tbl_df/tbl/data.frame) #>  $ city     : Factor w/ 37 levels \"ANTELOPE\",\"AUBURN\",..: 34 34 34 34 34 34 34 34 29 31 ... #>  $ zip      : Factor w/ 68 levels \"z95603\",\"z95608\",..: 64 52 44 44 53 65 66 49 24 25 ... #>  $ beds     : int [1:932] 2 3 2 2 2 3 3 3 2 3 ... #>  $ baths    : num [1:932] 1 1 1 1 1 1 2 1 2 2 ... #>  $ sqft     : int [1:932] 836 1167 796 852 797 1122 1104 1177 941 1146 ... #>  $ type     : Factor w/ 3 levels \"Condo\",\"Multi_Family\",..: 3 3 3 3 3 1 3 3 1 3 ... #>  $ price    : int [1:932] 59222 68212 68880 69307 81900 89921 90895 91002 94905 98937 ... #>  $ latitude : num [1:932] 38.6 38.5 38.6 38.6 38.5 ... #>  $ longitude: num [1:932] -121 -121 -121 -121 -121 ..."},{"path":"https://modeldata.tidymodels.org/reference/Smithsonian.html","id":null,"dir":"Reference","previous_headings":"","what":"Smithsonian museums — Smithsonian","title":"Smithsonian museums — Smithsonian","text":"Geocodes Smithsonian museums (circa 2018).","code":""},{"path":"https://modeldata.tidymodels.org/reference/Smithsonian.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Smithsonian museums — Smithsonian","text":"https://en.wikipedia.org/wiki/List_of_Smithsonian_museums","code":""},{"path":"https://modeldata.tidymodels.org/reference/Smithsonian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smithsonian museums — Smithsonian","text":"Smithsonian tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/Smithsonian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smithsonian museums — Smithsonian","text":"","code":"data(Smithsonian) str(Smithsonian) #> tibble [20 × 3] (S3: tbl_df/tbl/data.frame) #>  $ name     : chr [1:20] \"Anacostia Community Museum\" \"Arthur M. Sackler Gallery\" \"Arts and Industries Building\" \"Cooper Hewitt, Smithsonian Design Museum\" ... #>  $ latitude : num [1:20] 38.9 38.9 38.9 40.8 38.9 ... #>  $ longitude: num [1:20] -77 -77 -77 -74 -77 ..."},{"path":"https://modeldata.tidymodels.org/reference/ad_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Alzheimer's disease data — ad_data","title":"Alzheimer's disease data — ad_data","text":"Alzheimer's disease data","code":""},{"path":"https://modeldata.tidymodels.org/reference/ad_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alzheimer's disease data — ad_data","text":"Kuhn, M., Johnson, K. (2013) Applied Predictive Modeling, Springer. Craig-Schapiro R, Kuhn M, Xiong C, Pickering EH, Liu J, Misko TP, et al. (2011) Multiplexed Immunoassay Panel Identifies Novel CSF Biomarkers Alzheimer's Disease Diagnosis Prognosis. PLoS ONE 6(4): e18850.","code":""},{"path":"https://modeldata.tidymodels.org/reference/ad_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alzheimer's disease data — ad_data","text":"ad_data tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/ad_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alzheimer's disease data — ad_data","text":"Craig-Schapiro et al. (2011) describe clinical study 333 patients, including mild (well-characterized) cognitive impairment well healthy individuals. CSF samples taken subjects. goal study determine subjects early states impairment differentiated cognitively healthy individuals. Data collected subject included: Demographic characteristics age gender Apolipoprotein E genotype Protein measurements Abeta, Tau, phosphorylated version Tau (called pTau) Protein measurements 124 exploratory biomarkers, Clinical dementia scores analyses, converted scores two classes: impaired healthy. goal analysis create classification models using demographic assay data predict patients early stages disease.","code":""},{"path":"https://modeldata.tidymodels.org/reference/ad_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alzheimer's disease data — ad_data","text":"","code":"data(ad_data) str(ad_data) #> tibble [333 × 131] (S3: tbl_df/tbl/data.frame) #>  $ ACE_CD143_Angiotensin_Converti  : num [1:333] 2 1.56 1.52 1.68 2.4 ... #>  $ ACTH_Adrenocorticotropic_Hormon : num [1:333] -1.386 -1.386 -1.715 -1.609 -0.968 ... #>  $ AXL                             : num [1:333] 1.098 0.683 -0.145 0.683 0.191 ... #>  $ Adiponectin                     : num [1:333] -5.36 -5.02 -5.81 -5.12 -4.78 ... #>  $ Alpha_1_Antichymotrypsin        : num [1:333] 1.74 1.46 1.19 1.28 2.13 ... #>  $ Alpha_1_Antitrypsin             : num [1:333] -12.6 -11.9 -13.6 -15.5 -11.1 ... #>  $ Alpha_1_Microglobulin           : num [1:333] -2.58 -3.24 -2.88 -3.17 -2.34 ... #>  $ Alpha_2_Macroglobulin           : num [1:333] -72.7 -154.6 -136.5 -98.4 -144.9 ... #>  $ Angiopoietin_2_ANG_2            : num [1:333] 1.065 0.742 0.833 0.916 0.956 ... #>  $ Angiotensinogen                 : num [1:333] 2.51 2.46 1.98 2.38 2.86 ... #>  $ Apolipoprotein_A_IV             : num [1:333] -1.43 -1.66 -1.66 -2.12 -1.17 ... #>  $ Apolipoprotein_A1               : num [1:333] -7.4 -7.05 -7.68 -8.05 -6.73 ... #>  $ Apolipoprotein_A2               : num [1:333] -0.2614 -0.8675 -0.6539 -1.2379 0.0953 ... #>  $ Apolipoprotein_B                : num [1:333] -4.62 -6.75 -3.98 -6.52 -3.38 ... #>  $ Apolipoprotein_CI               : num [1:333] -1.273 -1.273 -1.715 -1.966 -0.755 ... #>  $ Apolipoprotein_CIII             : num [1:333] -2.31 -2.34 -2.75 -3 -1.51 ... #>  $ Apolipoprotein_D                : num [1:333] 2.08 1.34 1.34 1.44 1.63 ... #>  $ Apolipoprotein_E                : num [1:333] 3.75 3.1 2.75 2.37 3.07 ... #>  $ Apolipoprotein_H                : num [1:333] -0.157 -0.575 -0.345 -0.532 0.663 ... #>  $ B_Lymphocyte_Chemoattractant_BL : num [1:333] 2.3 1.67 1.67 1.98 2.3 ... #>  $ BMP_6                           : num [1:333] -2.2 -1.73 -2.06 -1.98 -1.24 ... #>  $ Beta_2_Microglobulin            : num [1:333] 0.693 0.47 0.336 0.642 0.336 ... #>  $ Betacellulin                    : int [1:333] 34 53 49 52 67 51 41 42 58 59 ... #>  $ C_Reactive_Protein              : num [1:333] -4.07 -6.65 -8.05 -6.21 -4.34 ... #>  $ CD40                            : num [1:333] -0.796 -1.273 -1.242 -1.124 -0.924 ... #>  $ CD5L                            : num [1:333] 0.0953 -0.6733 0.0953 -0.3285 0.3633 ... #>  $ Calbindin                       : num [1:333] 33.2 25.3 22.2 23.5 21.8 ... #>  $ Calcitonin                      : num [1:333] 1.386 3.611 2.116 -0.151 1.308 ... #>  $ CgA                             : num [1:333] 398 466 348 334 443 ... #>  $ Clusterin_Apo_J                 : num [1:333] 3.56 3.04 2.77 2.83 3.04 ... #>  $ Complement_3                    : num [1:333] -10.4 -16.1 -16.1 -13.2 -12.8 ... #>  $ Complement_Factor_H             : num [1:333] 3.57 3.6 4.47 3.1 7.25 ... #>  $ Connective_Tissue_Growth_Factor : num [1:333] 0.531 0.588 0.642 0.531 0.916 ... #>  $ Cortisol                        : num [1:333] 10 12 10 14 11 13 4.9 13 12 17 ... #>  $ Creatine_Kinase_MB              : num [1:333] -1.71 -1.75 -1.38 -1.65 -1.63 ... #>  $ Cystatin_C                      : num [1:333] 9.04 9.07 8.95 9.58 8.98 ... #>  $ EGF_R                           : num [1:333] -0.135 -0.37 -0.733 -0.422 -0.621 ... #>  $ EN_RAGE                         : num [1:333] -3.69 -3.82 -4.76 -2.94 -2.36 ... #>  $ ENA_78                          : num [1:333] -1.35 -1.36 -1.39 -1.37 -1.34 ... #>  $ Eotaxin_3                       : int [1:333] 53 62 62 44 64 57 64 64 64 70 ... #>  $ FAS                             : num [1:333] -0.0834 -0.5276 -0.6349 -0.478 -0.1278 ... #>  $ FSH_Follicle_Stimulation_Hormon : num [1:333] -0.652 -1.627 -1.563 -0.59 -0.976 ... #>  $ Fas_Ligand                      : num [1:333] 3.1 2.98 1.36 2.54 4.04 ... #>  $ Fatty_Acid_Binding_Protein      : num [1:333] 2.521 2.248 0.906 0.624 2.635 ... #>  $ Ferritin                        : num [1:333] 3.33 3.93 3.18 3.14 2.69 ... #>  $ Fetuin_A                        : num [1:333] 1.281 1.194 1.411 0.742 2.152 ... #>  $ Fibrinogen                      : num [1:333] -7.04 -8.05 -7.2 -7.8 -6.98 ... #>  $ GRO_alpha                       : num [1:333] 1.38 1.37 1.41 1.37 1.4 ... #>  $ Gamma_Interferon_induced_Monokin: num [1:333] 2.95 2.72 2.76 2.89 2.85 ... #>  $ Glutathione_S_Transferase_alpha : num [1:333] 1.064 0.867 0.889 0.708 1.236 ... #>  $ HB_EGF                          : num [1:333] 6.56 8.75 7.75 5.95 7.25 ... #>  $ HCC_4                           : num [1:333] -3.04 -4.07 -3.65 -3.82 -3.15 ... #>  $ Hepatocyte_Growth_Factor_HGF    : num [1:333] 0.5878 0.5306 0.0953 0.4055 0.5306 ... #>  $ I_309                           : num [1:333] 3.43 3.14 2.4 3.37 3.76 ... #>  $ ICAM_1                          : num [1:333] -0.1908 -0.462 -0.462 -0.8573 0.0972 ... #>  $ IGF_BP_2                        : num [1:333] 5.61 5.35 5.18 5.42 5.42 ... #>  $ IL_11                           : num [1:333] 5.12 4.94 4.67 6.22 7.07 ... #>  $ IL_13                           : num [1:333] 1.28 1.27 1.27 1.31 1.31 ... #>  $ IL_16                           : num [1:333] 4.19 2.88 2.62 2.44 4.74 ... #>  $ IL_17E                          : num [1:333] 5.73 6.71 4.15 4.7 4.2 ... #>  $ IL_1alpha                       : num [1:333] -6.57 -8.05 -8.18 -7.6 -6.94 ... #>  $ IL_3                            : num [1:333] -3.24 -3.91 -4.65 -4.27 -3 ... #>  $ IL_4                            : num [1:333] 2.48 2.4 1.82 1.48 2.71 ... #>  $ IL_5                            : num [1:333] 1.099 0.693 -0.248 0.788 1.163 ... #>  $ IL_6                            : num [1:333] 0.2694 0.0962 0.1857 -0.3712 -0.072 ... #>  $ IL_6_Receptor                   : num [1:333] 0.6428 0.4312 0.0967 0.5752 0.0967 ... #>  $ IL_7                            : num [1:333] 4.81 3.71 1.01 2.34 4.29 ... #>  $ IL_8                            : num [1:333] 1.71 1.68 1.69 1.72 1.76 ... #>  $ IP_10_Inducible_Protein_10      : num [1:333] 6.24 5.69 5.05 5.6 6.37 ... #>  $ IgA                             : num [1:333] -6.81 -6.38 -6.32 -7.62 -4.65 ... #>  $ Insulin                         : num [1:333] -0.626 -0.943 -1.447 -1.485 -0.3 ... #>  $ Kidney_Injury_Molecule_1_KIM_1  : num [1:333] -1.2 -1.2 -1.19 -1.23 -1.16 ... #>  $ LOX_1                           : num [1:333] 1.7 1.53 1.16 1.22 1.36 ... #>  $ Leptin                          : num [1:333] -1.529 -1.466 -1.662 -1.269 -0.915 ... #>  $ Lipoprotein_a                   : num [1:333] -4.27 -4.93 -5.84 -4.99 -2.94 ... #>  $ MCP_1                           : num [1:333] 6.74 6.85 6.77 6.78 6.72 ... #>  $ MCP_2                           : num [1:333] 1.981 1.809 0.401 1.981 2.221 ... #>  $ MIF                             : num [1:333] -1.24 -1.9 -2.3 -1.66 -1.9 ... #>  $ MIP_1alpha                      : num [1:333] 4.97 3.69 4.05 4.93 6.45 ... #>  $ MIP_1beta                       : num [1:333] 3.26 3.14 2.4 3.22 3.53 ... #>  $ MMP_2                           : num [1:333] 4.48 3.78 2.87 2.97 3.69 ... #>  $ MMP_3                           : num [1:333] -2.21 -2.47 -2.3 -1.77 -1.56 ... #>  $ MMP10                           : num [1:333] -3.27 -3.65 -2.73 -4.07 -2.62 ... #>  $ MMP7                            : num [1:333] -3.774 -5.968 -4.03 -6.856 -0.222 ... #>  $ Myoglobin                       : num [1:333] -1.897 -0.755 -1.386 -1.139 -1.772 ... #>  $ NT_proBNP                       : num [1:333] 4.55 4.22 4.25 4.11 4.47 ... #>  $ NrCAM                           : num [1:333] 5 5.21 4.74 4.97 5.2 ... #>  $ Osteopontin                     : num [1:333] 5.36 6 5.02 5.77 5.69 ... #>  $ PAI_1                           : num [1:333] 1.0035 -0.0306 0.4384 0 0.2523 ... #>  $ PAPP_A                          : num [1:333] -2.9 -2.81 -2.94 -2.79 -2.94 ... #>  $ PLGF                            : num [1:333] 4.44 4.03 4.51 3.43 4.8 ... #>  $ PYY                             : num [1:333] 3.22 3.14 2.89 2.83 3.66 ... #>  $ Pancreatic_polypeptide          : num [1:333] 0.579 0.336 -0.892 -0.821 0.262 ... #>  $ Prolactin                       : num [1:333] 0 -0.5108 -0.1393 -0.0408 0.1823 ... #>  $ Prostatic_Acid_Phosphatase      : num [1:333] -1.62 -1.74 -1.64 -1.74 -1.7 ... #>  $ Protein_S                       : num [1:333] -1.78 -2.46 -2.26 -2.7 -1.66 ... #>  $ Pulmonary_and_Activation_Regulat: num [1:333] -0.844 -2.303 -1.661 -1.109 -0.562 ... #>  $ RANTES                          : num [1:333] -6.21 -6.94 -6.65 -5.99 -6.32 ... #>  $ Resistin                        : num [1:333] -16.5 -16 -16.5 -13.5 -11.1 ... #>   [list output truncated]"},{"path":"https://modeldata.tidymodels.org/reference/ames.html","id":null,"dir":"Reference","previous_headings":"","what":"Ames Housing Data — ames","title":"Ames Housing Data — ames","text":"data set De Cock (2011) 82 fields recorded 2,930 properties Ames IA. version copies AmesHousing package include quality columns appear outcomes rather predictors.","code":""},{"path":"https://modeldata.tidymodels.org/reference/ames.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ames Housing Data — ames","text":"De Cock, D. (2011). \"Ames, Iowa: Alternative Boston Housing Data End Semester Regression Project,\" Journal Statistics Education,  Volume 19, Number 3. http://jse.amstat.org/v19n3/decock/DataDocumentation.txt http://jse.amstat.org/v19n3/decock.pdf","code":""},{"path":"https://modeldata.tidymodels.org/reference/ames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ames Housing Data — ames","text":"ames tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/ames.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ames Housing Data — ames","text":"See links sources information well ?AmesHousing::make_ames. data, training materials typically use:","code":"library(tidymodels)  set.seed(4595) data_split <- initial_split(ames, strata = \"Sale_Price\") ames_train <- training(data_split) ames_test  <- testing(data_split)  set.seed(2453) ames_folds<- vfold_cv(ames_train)"},{"path":"https://modeldata.tidymodels.org/reference/ames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ames Housing Data — ames","text":"","code":"data(ames) str(ames) #> tibble [2,930 × 74] (S3: tbl_df/tbl/data.frame) #>  $ MS_SubClass       : Factor w/ 16 levels \"One_Story_1946_and_Newer_All_Styles\",..: 1 1 1 1 6 6 12 12 12 6 ... #>  $ MS_Zoning         : Factor w/ 7 levels \"Floating_Village_Residential\",..: 3 2 3 3 3 3 3 3 3 3 ... #>  $ Lot_Frontage      : num [1:2930] 141 80 81 93 74 78 41 43 39 60 ... #>  $ Lot_Area          : int [1:2930] 31770 11622 14267 11160 13830 9978 4920 5005 5389 7500 ... #>  $ Street            : Factor w/ 2 levels \"Grvl\",\"Pave\": 2 2 2 2 2 2 2 2 2 2 ... #>  $ Alley             : Factor w/ 3 levels \"Gravel\",\"No_Alley_Access\",..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ Lot_Shape         : Factor w/ 4 levels \"Regular\",\"Slightly_Irregular\",..: 2 1 2 1 2 2 1 2 2 1 ... #>  $ Land_Contour      : Factor w/ 4 levels \"Bnk\",\"HLS\",\"Low\",..: 4 4 4 4 4 4 4 2 4 4 ... #>  $ Utilities         : Factor w/ 3 levels \"AllPub\",\"NoSeWa\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Lot_Config        : Factor w/ 5 levels \"Corner\",\"CulDSac\",..: 1 5 1 1 5 5 5 5 5 5 ... #>  $ Land_Slope        : Factor w/ 3 levels \"Gtl\",\"Mod\",\"Sev\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ Neighborhood      : Factor w/ 29 levels \"North_Ames\",\"College_Creek\",..: 1 1 1 1 7 7 17 17 17 7 ... #>  $ Condition_1       : Factor w/ 9 levels \"Artery\",\"Feedr\",..: 3 2 3 3 3 3 3 3 3 3 ... #>  $ Condition_2       : Factor w/ 8 levels \"Artery\",\"Feedr\",..: 3 3 3 3 3 3 3 3 3 3 ... #>  $ Bldg_Type         : Factor w/ 5 levels \"OneFam\",\"TwoFmCon\",..: 1 1 1 1 1 1 5 5 5 1 ... #>  $ House_Style       : Factor w/ 8 levels \"One_and_Half_Fin\",..: 3 3 3 3 8 8 3 3 3 8 ... #>  $ Overall_Cond      : Factor w/ 10 levels \"Very_Poor\",\"Poor\",..: 5 6 6 5 5 6 5 5 5 5 ... #>  $ Year_Built        : int [1:2930] 1960 1961 1958 1968 1997 1998 2001 1992 1995 1999 ... #>  $ Year_Remod_Add    : int [1:2930] 1960 1961 1958 1968 1998 1998 2001 1992 1996 1999 ... #>  $ Roof_Style        : Factor w/ 6 levels \"Flat\",\"Gable\",..: 4 2 4 4 2 2 2 2 2 2 ... #>  $ Roof_Matl         : Factor w/ 8 levels \"ClyTile\",\"CompShg\",..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ Exterior_1st      : Factor w/ 16 levels \"AsbShng\",\"AsphShn\",..: 4 14 15 4 14 14 6 7 6 14 ... #>  $ Exterior_2nd      : Factor w/ 17 levels \"AsbShng\",\"AsphShn\",..: 11 15 16 4 15 15 6 7 6 15 ... #>  $ Mas_Vnr_Type      : Factor w/ 5 levels \"BrkCmn\",\"BrkFace\",..: 5 4 2 4 4 2 4 4 4 4 ... #>  $ Mas_Vnr_Area      : num [1:2930] 112 0 108 0 0 20 0 0 0 0 ... #>  $ Exter_Cond        : Factor w/ 5 levels \"Excellent\",\"Fair\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ Foundation        : Factor w/ 6 levels \"BrkTil\",\"CBlock\",..: 2 2 2 2 3 3 3 3 3 3 ... #>  $ Bsmt_Cond         : Factor w/ 6 levels \"Excellent\",\"Fair\",..: 3 6 6 6 6 6 6 6 6 6 ... #>  $ Bsmt_Exposure     : Factor w/ 5 levels \"Av\",\"Gd\",\"Mn\",..: 2 4 4 4 4 4 3 4 4 4 ... #>  $ BsmtFin_Type_1    : Factor w/ 7 levels \"ALQ\",\"BLQ\",\"GLQ\",..: 2 6 1 1 3 3 3 1 3 7 ... #>  $ BsmtFin_SF_1      : num [1:2930] 2 6 1 1 3 3 3 1 3 7 ... #>  $ BsmtFin_Type_2    : Factor w/ 7 levels \"ALQ\",\"BLQ\",\"GLQ\",..: 7 4 7 7 7 7 7 7 7 7 ... #>  $ BsmtFin_SF_2      : num [1:2930] 0 144 0 0 0 0 0 0 0 0 ... #>  $ Bsmt_Unf_SF       : num [1:2930] 441 270 406 1045 137 ... #>  $ Total_Bsmt_SF     : num [1:2930] 1080 882 1329 2110 928 ... #>  $ Heating           : Factor w/ 6 levels \"Floor\",\"GasA\",..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ Heating_QC        : Factor w/ 5 levels \"Excellent\",\"Fair\",..: 2 5 5 1 3 1 1 1 1 3 ... #>  $ Central_Air       : Factor w/ 2 levels \"N\",\"Y\": 2 2 2 2 2 2 2 2 2 2 ... #>  $ Electrical        : Factor w/ 6 levels \"FuseA\",\"FuseF\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ First_Flr_SF      : int [1:2930] 1656 896 1329 2110 928 926 1338 1280 1616 1028 ... #>  $ Second_Flr_SF     : int [1:2930] 0 0 0 0 701 678 0 0 0 776 ... #>  $ Gr_Liv_Area       : int [1:2930] 1656 896 1329 2110 1629 1604 1338 1280 1616 1804 ... #>  $ Bsmt_Full_Bath    : num [1:2930] 1 0 0 1 0 0 1 0 1 0 ... #>  $ Bsmt_Half_Bath    : num [1:2930] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Full_Bath         : int [1:2930] 1 1 1 2 2 2 2 2 2 2 ... #>  $ Half_Bath         : int [1:2930] 0 0 1 1 1 1 0 0 0 1 ... #>  $ Bedroom_AbvGr     : int [1:2930] 3 2 3 3 3 3 2 2 2 3 ... #>  $ Kitchen_AbvGr     : int [1:2930] 1 1 1 1 1 1 1 1 1 1 ... #>  $ TotRms_AbvGrd     : int [1:2930] 7 5 6 8 6 7 6 5 5 7 ... #>  $ Functional        : Factor w/ 8 levels \"Maj1\",\"Maj2\",..: 8 8 8 8 8 8 8 8 8 8 ... #>  $ Fireplaces        : int [1:2930] 2 0 0 2 1 1 0 0 1 1 ... #>  $ Garage_Type       : Factor w/ 7 levels \"Attchd\",\"Basment\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ Garage_Finish     : Factor w/ 4 levels \"Fin\",\"No_Garage\",..: 1 4 4 1 1 1 1 3 3 1 ... #>  $ Garage_Cars       : num [1:2930] 2 1 1 2 2 2 2 2 2 2 ... #>  $ Garage_Area       : num [1:2930] 528 730 312 522 482 470 582 506 608 442 ... #>  $ Garage_Cond       : Factor w/ 6 levels \"Excellent\",\"Fair\",..: 6 6 6 6 6 6 6 6 6 6 ... #>  $ Paved_Drive       : Factor w/ 3 levels \"Dirt_Gravel\",..: 2 3 3 3 3 3 3 3 3 3 ... #>  $ Wood_Deck_SF      : int [1:2930] 210 140 393 0 212 360 0 0 237 140 ... #>  $ Open_Porch_SF     : int [1:2930] 62 0 36 0 34 36 0 82 152 60 ... #>  $ Enclosed_Porch    : int [1:2930] 0 0 0 0 0 0 170 0 0 0 ... #>  $ Three_season_porch: int [1:2930] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Screen_Porch      : int [1:2930] 0 120 0 0 0 0 0 144 0 0 ... #>  $ Pool_Area         : int [1:2930] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Pool_QC           : Factor w/ 5 levels \"Excellent\",\"Fair\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ Fence             : Factor w/ 5 levels \"Good_Privacy\",..: 5 3 5 5 3 5 5 5 5 5 ... #>  $ Misc_Feature      : Factor w/ 6 levels \"Elev\",\"Gar2\",..: 3 3 2 3 3 3 3 3 3 3 ... #>  $ Misc_Val          : int [1:2930] 0 0 12500 0 0 0 0 0 0 0 ... #>  $ Mo_Sold           : int [1:2930] 5 6 6 4 3 6 4 1 3 6 ... #>  $ Year_Sold         : int [1:2930] 2010 2010 2010 2010 2010 2010 2010 2010 2010 2010 ... #>  $ Sale_Type         : Factor w/ 10 levels \"COD\",\"Con\",\"ConLD\",..: 10 10 10 10 10 10 10 10 10 10 ... #>  $ Sale_Condition    : Factor w/ 6 levels \"Abnorml\",\"AdjLand\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ Sale_Price        : int [1:2930] 215000 105000 172000 244000 189900 195500 213500 191500 236500 189000 ... #>  $ Longitude         : num [1:2930] -93.6 -93.6 -93.6 -93.6 -93.6 ... #>  $ Latitude          : num [1:2930] 42.1 42.1 42.1 42.1 42.1 ..."},{"path":"https://modeldata.tidymodels.org/reference/attrition.html","id":null,"dir":"Reference","previous_headings":"","what":"Job attrition — attrition","title":"Job attrition — attrition","text":"Job attrition","code":""},{"path":"https://modeldata.tidymodels.org/reference/attrition.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Job attrition — attrition","text":"IBM Watson Analytics Lab website https://www.ibm.com/communities/analytics/watson-analytics-blog/hr-employee-attrition/","code":""},{"path":"https://modeldata.tidymodels.org/reference/attrition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Job attrition — attrition","text":"attrition data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/attrition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Job attrition — attrition","text":"data IBM Watson Analytics Lab. website describes data “Uncover factors lead employee attrition explore important questions ‘show breakdown distance home job role attrition’ ‘compare average monthly income education attrition’. fictional data set created IBM data scientists.”. 1470 rows.","code":""},{"path":"https://modeldata.tidymodels.org/reference/attrition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Job attrition — attrition","text":"","code":"data(attrition) str(attrition) #> 'data.frame':\t1470 obs. of  31 variables: #>  $ Age                     : int  41 49 37 33 27 32 59 30 38 36 ... #>  $ Attrition               : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 1 1 1 1 1 1 1 ... #>  $ BusinessTravel          : Factor w/ 3 levels \"Non-Travel\",\"Travel_Frequently\",..: 3 2 3 2 3 2 3 3 2 3 ... #>  $ DailyRate               : int  1102 279 1373 1392 591 1005 1324 1358 216 1299 ... #>  $ Department              : Factor w/ 3 levels \"Human_Resources\",..: 3 2 2 2 2 2 2 2 2 2 ... #>  $ DistanceFromHome        : int  1 8 2 3 2 2 3 24 23 27 ... #>  $ Education               : Ord.factor w/ 5 levels \"Below_College\"<..: 2 1 2 4 1 2 3 1 3 3 ... #>  $ EducationField          : Factor w/ 6 levels \"Human_Resources\",..: 2 2 5 2 4 2 4 2 2 4 ... #>  $ EnvironmentSatisfaction : Ord.factor w/ 4 levels \"Low\"<\"Medium\"<..: 2 3 4 4 1 4 3 4 4 3 ... #>  $ Gender                  : Factor w/ 2 levels \"Female\",\"Male\": 1 2 2 1 2 2 1 2 2 2 ... #>  $ HourlyRate              : int  94 61 92 56 40 79 81 67 44 94 ... #>  $ JobInvolvement          : Ord.factor w/ 4 levels \"Low\"<\"Medium\"<..: 3 2 2 3 3 3 4 3 2 3 ... #>  $ JobLevel                : int  2 2 1 1 1 1 1 1 3 2 ... #>  $ JobRole                 : Factor w/ 9 levels \"Healthcare_Representative\",..: 8 7 3 7 3 3 3 3 5 1 ... #>  $ JobSatisfaction         : Ord.factor w/ 4 levels \"Low\"<\"Medium\"<..: 4 2 3 3 2 4 1 3 3 3 ... #>  $ MaritalStatus           : Factor w/ 3 levels \"Divorced\",\"Married\",..: 3 2 3 2 2 3 2 1 3 2 ... #>  $ MonthlyIncome           : int  5993 5130 2090 2909 3468 3068 2670 2693 9526 5237 ... #>  $ MonthlyRate             : int  19479 24907 2396 23159 16632 11864 9964 13335 8787 16577 ... #>  $ NumCompaniesWorked      : int  8 1 6 1 9 0 4 1 0 6 ... #>  $ OverTime                : Factor w/ 2 levels \"No\",\"Yes\": 2 1 2 2 1 1 2 1 1 1 ... #>  $ PercentSalaryHike       : int  11 23 15 11 12 13 20 22 21 13 ... #>  $ PerformanceRating       : Ord.factor w/ 4 levels \"Low\"<\"Good\"<\"Excellent\"<..: 3 4 3 3 3 3 4 4 4 3 ... #>  $ RelationshipSatisfaction: Ord.factor w/ 4 levels \"Low\"<\"Medium\"<..: 1 4 2 3 4 3 1 2 2 2 ... #>  $ StockOptionLevel        : int  0 1 0 0 1 0 3 1 0 2 ... #>  $ TotalWorkingYears       : int  8 10 7 8 6 8 12 1 10 17 ... #>  $ TrainingTimesLastYear   : int  0 3 3 3 3 2 3 2 2 3 ... #>  $ WorkLifeBalance         : Ord.factor w/ 4 levels \"Bad\"<\"Good\"<\"Better\"<..: 1 3 3 3 3 2 2 3 3 2 ... #>  $ YearsAtCompany          : int  6 10 0 8 2 7 1 1 9 7 ... #>  $ YearsInCurrentRole      : int  4 7 0 7 2 7 0 0 7 7 ... #>  $ YearsSinceLastPromotion : int  0 1 0 3 2 3 0 0 1 7 ... #>  $ YearsWithCurrManager    : int  5 7 0 0 2 6 0 0 8 7 ..."},{"path":"https://modeldata.tidymodels.org/reference/biomass.html","id":null,"dir":"Reference","previous_headings":"","what":"Biomass data — biomass","title":"Biomass data — biomass","text":"Ghugare et al (2014) contains data set different biomass fuels characterized amount certain molecules (carbon, hydrogen, oxygen, nitrogen, sulfur) corresponding higher heating value (HHV). data Table S.2 Supplementary Materials","code":""},{"path":"https://modeldata.tidymodels.org/reference/biomass.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Biomass data — biomass","text":"Ghugare, S. B., Tiwary, S., Elangovan, V., Tambe, S. S. (2013). Prediction Higher Heating Value Solid Biomass Fuels Using Artificial Intelligence Formalisms. BioEnergy Research, 1-12.","code":""},{"path":"https://modeldata.tidymodels.org/reference/biomass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biomass data — biomass","text":"biomass data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/biomass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biomass data — biomass","text":"","code":"data(biomass) str(biomass) #> 'data.frame':\t536 obs. of  8 variables: #>  $ sample  : chr  \"Akhrot Shell\" \"Alabama Oak Wood Waste\" \"Alder\" \"Alfalfa\" ... #>  $ dataset : chr  \"Training\" \"Training\" \"Training\" \"Training\" ... #>  $ carbon  : num  49.8 49.5 47.8 45.1 46.8 ... #>  $ hydrogen: num  5.64 5.7 5.8 4.97 5.4 5.75 5.99 5.7 5.5 5.9 ... #>  $ oxygen  : num  42.9 41.3 46.2 35.6 40.7 ... #>  $ nitrogen: num  0.41 0.2 0.11 3.3 1 2.04 2.68 1.7 0.8 1.2 ... #>  $ sulfur  : num  0 0 0.02 0.16 0.02 0.1 0.2 0.2 0 0.1 ... #>  $ HHV     : num  20 19.2 18.3 18.2 18.4 ..."},{"path":"https://modeldata.tidymodels.org/reference/bivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Example bivariate classification data — bivariate","title":"Example bivariate classification data — bivariate","text":"Example bivariate classification data","code":""},{"path":"https://modeldata.tidymodels.org/reference/bivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example bivariate classification data — bivariate","text":"bivariate_train, bivariate_test, bivariate_val tibbles","code":""},{"path":"https://modeldata.tidymodels.org/reference/bivariate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example bivariate classification data — bivariate","text":"data simplified version segmentation data contained caret. three columns: B predictors column Class factor levels \"One\" \"Two\". three data sets: one training (n = 1009), validation (n = 300), testing (n = 710).","code":""},{"path":"https://modeldata.tidymodels.org/reference/bivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example bivariate classification data — bivariate","text":"","code":"data(bivariate) str(bivariate_train) #> tibble [1,009 × 3] (S3: tbl_df/tbl/data.frame) #>  $ A    : num [1:1009] 3279 1727 1195 1027 1036 ... #>  $ B    : num [1:1009] 154.9 84.6 101.1 68.7 73.4 ... #>  $ Class: Factor w/ 2 levels \"One\",\"Two\": 1 2 1 2 1 1 1 2 2 2 ... str(bivariate_val) #> tibble [300 × 3] (S3: tbl_df/tbl/data.frame) #>  $ A    : num [1:300] 1061 1241 939 813 1706 ... #>  $ B    : num [1:300] 74.5 83.4 71.9 77.1 92.8 ... #>  $ Class: Factor w/ 2 levels \"One\",\"Two\": 1 1 1 1 2 1 1 1 1 1 ... str(bivariate_test) #> tibble [710 × 3] (S3: tbl_df/tbl/data.frame) #>  $ A    : num [1:710] 742 709 1006 1983 1698 ... #>  $ B    : num [1:710] 68.8 50.4 89.9 111.8 81 ... #>  $ Class: Factor w/ 2 levels \"One\",\"Two\": 1 2 1 2 2 1 1 2 1 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/car_prices.html","id":null,"dir":"Reference","previous_headings":"","what":"Kelly Blue Book resale data for 2005 model year GM cars — car_prices","title":"Kelly Blue Book resale data for 2005 model year GM cars — car_prices","text":"Kuiper (2008) collected data Kelly Blue Book resale data 804 GM cars (2005 model year).","code":""},{"path":"https://modeldata.tidymodels.org/reference/car_prices.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Kelly Blue Book resale data for 2005 model year GM cars — car_prices","text":"Kuiper, S. (2008). Introduction Multiple Regression: Much Car Worth?, Journal Statistics Education, Vol. 16 http://jse.amstat.org/jse_archive.htm#2008.","code":""},{"path":"https://modeldata.tidymodels.org/reference/car_prices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kelly Blue Book resale data for 2005 model year GM cars — car_prices","text":"car_prices data frame suggested retail price (column Price) various characteristics car (columns Mileage, Cylinder, Doors, Cruise, Sound, Leather, Buick, Cadillac, Chevy, Pontiac, Saab, Saturn, convertible, coupe, hatchback, sedan wagon)","code":""},{"path":"https://modeldata.tidymodels.org/reference/car_prices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kelly Blue Book resale data for 2005 model year GM cars — car_prices","text":"","code":"data(car_prices) str(car_prices) #> tibble [804 × 18] (S3: tbl_df/tbl/data.frame) #>  $ Price      : num [1:804] 22661 21725 29143 30732 33359 ... #>  $ Mileage    : int [1:804] 20105 13457 31655 22479 17590 23635 17381 27558 25049 17319 ... #>  $ Cylinder   : int [1:804] 6 6 4 4 4 4 4 4 4 4 ... #>  $ Doors      : int [1:804] 4 2 2 2 2 2 2 2 2 4 ... #>  $ Cruise     : int [1:804] 1 1 1 1 1 1 1 1 1 1 ... #>  $ Sound      : int [1:804] 0 1 1 0 1 0 1 0 0 0 ... #>  $ Leather    : int [1:804] 0 0 1 0 1 0 1 1 0 1 ... #>  $ Buick      : int [1:804] 1 0 0 0 0 0 0 0 0 0 ... #>  $ Cadillac   : int [1:804] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Chevy      : int [1:804] 0 1 0 0 0 0 0 0 0 0 ... #>  $ Pontiac    : int [1:804] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Saab       : int [1:804] 0 0 1 1 1 1 1 1 1 1 ... #>  $ Saturn     : int [1:804] 0 0 0 0 0 0 0 0 0 0 ... #>  $ convertible: int [1:804] 0 0 1 1 1 1 1 1 1 0 ... #>  $ coupe      : int [1:804] 0 1 0 0 0 0 0 0 0 0 ... #>  $ hatchback  : int [1:804] 0 0 0 0 0 0 0 0 0 0 ... #>  $ sedan      : int [1:804] 1 0 0 0 0 0 0 0 0 1 ... #>  $ wagon      : int [1:804] 0 0 0 0 0 0 0 0 0 0 ..."},{"path":"https://modeldata.tidymodels.org/reference/cat_adoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Cat Adoption — cat_adoption","title":"Cat Adoption — cat_adoption","text":"subset cats animal shelter Long Beach, California, USA.","code":""},{"path":"https://modeldata.tidymodels.org/reference/cat_adoption.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cat Adoption — cat_adoption","text":"https://data.longbeach.gov/explore/dataset/animal-shelter-intakes--outcomes/information/ 2024-06-17","code":""},{"path":"https://modeldata.tidymodels.org/reference/cat_adoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cat Adoption — cat_adoption","text":"tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/cat_adoption.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cat Adoption — cat_adoption","text":"data frame 2257 rows 19 columns: time time cat spent shelter. event event interest cat homed returned original location (.e., owner community). non-event cat transferred another shelter dying. Zero indicates non-event (censored), one corresponds event occurring. sex sex cat. neutered Whether cat neutered. intake_condition intake condition cat. intake_type type intake. latitude Latitude intersection/cross street intake capture. longitude Longitude intersection/cross street intake capture. black,brown,brown_tabby,calico,cream,gray,gray_tabby,orange,orange_tabby,tan,tortie,white Indicators color/pattern cat's fur.","code":""},{"path":"https://modeldata.tidymodels.org/reference/cat_adoption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cat Adoption — cat_adoption","text":"","code":"str(cat_adoption) #> tibble [2,257 × 20] (S3: tbl_df/tbl/data.frame) #>  $ time            : num [1:2257] 17 98 15 72 22 66 200 9 45 38 ... #>  $ event           : num [1:2257] 1 1 0 1 0 1 1 0 1 1 ... #>  $ sex             : Factor w/ 3 levels \"female\",\"male\",..: 2 2 2 1 2 2 1 1 2 2 ... #>  $ neutered        : Factor w/ 3 levels \"no\",\"unknown\",..: 3 3 3 3 3 3 3 3 3 1 ... #>  $ intake_condition: Factor w/ 7 levels \"feral\",\"fractious\",..: 2 5 4 2 5 5 7 5 3 3 ... #>  $ intake_type     : Factor w/ 3 levels \"owner_surrender\",..: 1 2 1 1 1 1 3 1 2 2 ... #>  $ latitude        : num [1:2257] 33.8 33.8 33.8 33.8 33.8 ... #>  $ longitude       : num [1:2257] -118 -118 -118 -118 -118 ... #>  $ black           : int [1:2257] 0 0 0 1 0 1 0 1 0 0 ... #>  $ brown           : int [1:2257] 0 0 0 0 0 0 0 0 0 0 ... #>  $ brown_tabby     : int [1:2257] 0 0 0 0 1 0 0 0 0 0 ... #>  $ calico          : int [1:2257] 0 0 0 0 0 0 0 0 0 0 ... #>  $ cream           : int [1:2257] 0 0 0 0 0 0 0 0 0 0 ... #>  $ gray            : int [1:2257] 0 0 1 0 0 1 1 0 0 0 ... #>  $ gray_tabby      : int [1:2257] 0 0 0 0 0 0 0 0 0 1 ... #>  $ orange          : int [1:2257] 0 1 0 0 0 0 0 0 0 0 ... #>  $ orange_tabby    : int [1:2257] 0 0 0 0 0 0 0 0 1 0 ... #>  $ tan             : int [1:2257] 1 0 0 0 0 0 0 0 0 0 ... #>  $ tortie          : int [1:2257] 0 0 0 1 0 0 0 0 0 0 ... #>  $ white           : int [1:2257] 1 1 1 0 1 0 1 1 1 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Cell body segmentation — cells","title":"Cell body segmentation — cells","text":"Hill, LaPan, Li Haney (2007) develop models predict cells high content screen well segmented.  data consists 119 imaging measurements 2019. original analysis used 1009 training 1010 test set (see column called case).","code":""},{"path":"https://modeldata.tidymodels.org/reference/cells.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cell body segmentation — cells","text":"Hill, LaPan, Li Haney (2007). Impact image segmentation high-content screening data quality SK-BR-3 cells, BMC Bioinformatics, Vol. 8, pg. 340, https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-8-340.","code":""},{"path":"https://modeldata.tidymodels.org/reference/cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cell body segmentation — cells","text":"cells tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/cells.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cell body segmentation — cells","text":"outcome class contained factor variable called class levels \"PS\" poorly segmented \"WS\" well segmented. raw data used paper can found Biomedcentral website. version contained cells modified. First, several discrete versions predictors (suffix \"Status\") removed. Second, several skewed predictors minimum values zero (benefit transformation, log). constant value 1 added fields: avg_inten_ch_2, fiber_align_2_ch_3, fiber_align_2_ch_4, spot_fiber_count_ch_4 total_inten_ch_2.","code":""},{"path":"https://modeldata.tidymodels.org/reference/cells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cell body segmentation — cells","text":"","code":"data(cells) str(cells) #> tibble [2,019 × 58] (S3: tbl_df/tbl/data.frame) #>  $ case                        : Factor w/ 2 levels \"Test\",\"Train\": 1 2 2 2 1 1 1 1 1 1 ... #>  $ class                       : Factor w/ 2 levels \"PS\",\"WS\": 1 1 2 1 1 2 2 1 2 2 ... #>  $ angle_ch_1                  : num [1:2019] 143.25 133.75 106.65 69.15 2.89 ... #>  $ area_ch_1                   : int [1:2019] 185 819 431 298 285 172 177 251 495 384 ... #>  $ avg_inten_ch_1              : num [1:2019] 15.7 31.9 28 19.5 24.3 ... #>  $ avg_inten_ch_2              : num [1:2019] 4.95 206.88 116.32 102.29 112.42 ... #>  $ avg_inten_ch_3              : num [1:2019] 9.55 69.92 63.94 28.22 20.47 ... #>  $ avg_inten_ch_4              : num [1:2019] 2.21 164.15 106.7 31.03 40.58 ... #>  $ convex_hull_area_ratio_ch_1 : num [1:2019] 1.12 1.26 1.05 1.2 1.11 ... #>  $ convex_hull_perim_ratio_ch_1: num [1:2019] 0.92 0.797 0.935 0.866 0.957 ... #>  $ diff_inten_density_ch_1     : num [1:2019] 29.5 31.9 32.5 26.7 31.6 ... #>  $ diff_inten_density_ch_3     : num [1:2019] 13.8 43.1 36 22.9 21.7 ... #>  $ diff_inten_density_ch_4     : num [1:2019] 6.83 79.31 51.36 26.39 25.03 ... #>  $ entropy_inten_ch_1          : num [1:2019] 4.97 6.09 5.88 5.42 5.66 ... #>  $ entropy_inten_ch_3          : num [1:2019] 4.37 6.64 6.68 5.44 5.29 ... #>  $ entropy_inten_ch_4          : num [1:2019] 2.72 7.88 7.14 5.78 5.24 ... #>  $ eq_circ_diam_ch_1           : num [1:2019] 15.4 32.3 23.4 19.5 19.1 ... #>  $ eq_ellipse_lwr_ch_1         : num [1:2019] 3.06 1.56 1.38 3.39 2.74 ... #>  $ eq_ellipse_oblate_vol_ch_1  : num [1:2019] 337 2233 802 725 608 ... #>  $ eq_ellipse_prolate_vol_ch_1 : num [1:2019] 110 1433 583 214 222 ... #>  $ eq_sphere_area_ch_1         : num [1:2019] 742 3279 1727 1195 1140 ... #>  $ eq_sphere_vol_ch_1          : num [1:2019] 1901 17654 6751 3884 3621 ... #>  $ fiber_align_2_ch_3          : num [1:2019] 1 1.49 1.3 1.22 1.49 ... #>  $ fiber_align_2_ch_4          : num [1:2019] 1 1.35 1.52 1.73 1.38 ... #>  $ fiber_length_ch_1           : num [1:2019] 27 64.3 21.1 43.1 34.7 ... #>  $ fiber_width_ch_1            : num [1:2019] 7.41 13.17 21.14 7.4 8.48 ... #>  $ inten_cooc_asm_ch_3         : num [1:2019] 0.01118 0.02805 0.00686 0.03096 0.02277 ... #>  $ inten_cooc_asm_ch_4         : num [1:2019] 0.05045 0.01259 0.00614 0.01103 0.07969 ... #>  $ inten_cooc_contrast_ch_3    : num [1:2019] 40.75 8.23 14.45 7.3 15.85 ... #>  $ inten_cooc_contrast_ch_4    : num [1:2019] 13.9 6.98 16.7 13.39 3.54 ... #>  $ inten_cooc_entropy_ch_3     : num [1:2019] 7.2 6.82 7.58 6.31 6.78 ... #>  $ inten_cooc_entropy_ch_4     : num [1:2019] 5.25 7.1 7.67 7.2 5.5 ... #>  $ inten_cooc_max_ch_3         : num [1:2019] 0.0774 0.1532 0.0284 0.1628 0.1274 ... #>  $ inten_cooc_max_ch_4         : num [1:2019] 0.172 0.0739 0.0232 0.0775 0.2785 ... #>  $ kurt_inten_ch_1             : num [1:2019] -0.6567 -0.2488 -0.2935 0.6259 0.0421 ... #>  $ kurt_inten_ch_3             : num [1:2019] -0.608 -0.331 1.051 0.128 0.952 ... #>  $ kurt_inten_ch_4             : num [1:2019] 0.726 -0.265 0.151 -0.347 -0.195 ... #>  $ length_ch_1                 : num [1:2019] 26.2 47.2 28.1 37.9 36 ... #>  $ neighbor_avg_dist_ch_1      : num [1:2019] 370 174 158 206 205 ... #>  $ neighbor_min_dist_ch_1      : num [1:2019] 99.1 30.1 34.9 33.1 27 ... #>  $ neighbor_var_dist_ch_1      : num [1:2019] 128 81.4 90.4 116.9 111 ... #>  $ perim_ch_1                  : num [1:2019] 68.8 154.9 84.6 101.1 86.5 ... #>  $ shape_bfr_ch_1              : num [1:2019] 0.665 0.54 0.724 0.589 0.6 ... #>  $ shape_lwr_ch_1              : num [1:2019] 2.46 1.47 1.33 2.83 2.73 ... #>  $ shape_p_2_a_ch_1            : num [1:2019] 1.88 2.26 1.27 2.55 2.02 ... #>  $ skew_inten_ch_1             : num [1:2019] 0.455 0.399 0.472 0.882 0.517 ... #>  $ skew_inten_ch_3             : num [1:2019] 0.46 0.62 0.971 1 1.177 ... #>  $ skew_inten_ch_4             : num [1:2019] 1.233 0.527 0.325 0.604 0.926 ... #>  $ spot_fiber_count_ch_3       : int [1:2019] 1 4 2 4 1 1 0 2 1 1 ... #>  $ spot_fiber_count_ch_4       : num [1:2019] 5 12 7 8 8 5 5 8 12 8 ... #>  $ total_inten_ch_1            : int [1:2019] 2781 24964 11552 5545 6603 53779 43950 4401 7593 6512 ... #>  $ total_inten_ch_2            : num [1:2019] 701 160998 47511 28870 30306 ... #>  $ total_inten_ch_3            : int [1:2019] 1690 54675 26344 8042 5569 21234 20929 4136 6488 7503 ... #>  $ total_inten_ch_4            : int [1:2019] 392 128368 43959 8843 11037 57231 46187 373 24325 23162 ... #>  $ var_inten_ch_1              : num [1:2019] 12.5 18.8 17.3 13.8 15.4 ... #>  $ var_inten_ch_3              : num [1:2019] 7.61 56.72 37.67 30.01 20.5 ... #>  $ var_inten_ch_4              : num [1:2019] 2.71 118.39 49.47 24.75 45.45 ... #>  $ width_ch_1                  : num [1:2019] 10.6 32.2 21.2 13.4 13.2 ..."},{"path":"https://modeldata.tidymodels.org/reference/check_times.html","id":null,"dir":"Reference","previous_headings":"","what":"Execution time data — check_times","title":"Execution time data — check_times","text":"data collected CRAN web page 13,626 R packages. time complete standard package checking routine collected cases, package checking process stopped due errors data treated censored. less 1 percent.","code":""},{"path":"https://modeldata.tidymodels.org/reference/check_times.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Execution time data — check_times","text":"CRAN","code":""},{"path":"https://modeldata.tidymodels.org/reference/check_times.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execution time data — check_times","text":"check_times data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/check_times.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execution time data — check_times","text":"predictors, associated package source code downloaded parsed create predictors, including authors: number authors author field. imports: number imported packages. suggests: number packages suggested. depends: number hard dependencies. Roxygen: binary indicator whether Roxygen used documentation. gh: binary indicator whether URL field contained GitHub link. rforge: binary indicator whether URL field contained link R-forge. descr: number characters (, cases, bytes) description field. r_count: number R files R directory. r_size: total disk size R files. ns_import: Estimated number imported functions methods. ns_export: Estimated number exported functions methods. s3_methods: Estimated number S3 methods. s4_methods: Estimated number S4 methods. doc_count: many Rmd Rnw files vignettes directory. doc_size: disk size Rmd Rnw files. src_count: number files src directory. src_size: size disk files src directory. data_count  number files data directory. data_size: size disk files data directory. testthat_count: number files testthat directory. testthat_size: size disk files testthat directory. check_time: time (seconds) run R CMD check using \"r-devel-windows-ix86+x86_64` flavor. status: indicator whether tests completed. Data collected 2019-01-20.","code":""},{"path":"https://modeldata.tidymodels.org/reference/check_times.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execution time data — check_times","text":"","code":"data(check_times) str(check_times) #> tibble [13,626 × 25] (S3: tbl_df/tbl/data.frame) #>  $ package       : chr [1:13626] \"A3\" \"abbyyR\" \"abc\" \"abc.data\" ... #>  $ authors       : int [1:13626] 1 1 1 1 5 3 2 1 4 6 ... #>  $ imports       : num [1:13626] 0 6 0 0 3 1 0 4 0 7 ... #>  $ suggests      : num [1:13626] 2 4 0 0 2 0 2 2 0 0 ... #>  $ depends       : num [1:13626] 3 1 6 1 1 1 5 0 1 1 ... #>  $ Roxygen       : num [1:13626] 0 1 0 0 1 0 0 1 0 0 ... #>  $ gh            : num [1:13626] 0 1 0 0 0 0 0 1 0 0 ... #>  $ rforge        : num [1:13626] 0 0 0 0 0 0 0 0 0 0 ... #>  $ descr         : int [1:13626] 217 313 269 63 223 1031 135 344 204 335 ... #>  $ r_count       : int [1:13626] 2 20 8 0 10 10 16 3 6 14 ... #>  $ r_size        : num [1:13626] 0.0291 0.0463 0.0784 0 0.0191 ... #>  $ ns_import     : num [1:13626] 3 15 6 0 4 5 0 4 2 10 ... #>  $ ns_export     : num [1:13626] 0 19 0 0 10 0 0 2 0 9 ... #>  $ s3_methods    : num [1:13626] 3 0 11 0 0 0 0 2 0 23 ... #>  $ s4_methods    : num [1:13626] 0 0 0 0 0 0 0 0 0 0 ... #>  $ doc_count     : int [1:13626] 0 3 1 0 1 0 0 0 0 0 ... #>  $ doc_size      : num [1:13626] 0 0.01976 0.03828 0 0.00787 ... #>  $ src_count     : int [1:13626] 0 0 0 0 0 0 0 2 0 5 ... #>  $ src_size      : num [1:13626] 0 0 0 0 0 ... #>  $ data_count    : int [1:13626] 2 0 0 3 3 1 10 0 4 2 ... #>  $ data_size     : num [1:13626] 0.0253 0 0 4.8859 4.5955 ... #>  $ testthat_count: int [1:13626] 0 8 0 0 0 0 0 1 0 0 ... #>  $ testthat_size : num [1:13626] 0 0.0025 0 0 0 ... #>  $ check_time    : num [1:13626] 49 101 292 21 103 46 78 91 47 196 ... #>  $ status        : num [1:13626] 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/chem_proc_yield.html","id":null,"dir":"Reference","previous_headings":"","what":"Chemical manufacturing process data set — chem_proc_yield","title":"Chemical manufacturing process data set — chem_proc_yield","text":"data set models yield function biological material predictors chemical structure predictors.","code":""},{"path":"https://modeldata.tidymodels.org/reference/chem_proc_yield.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chemical manufacturing process data set — chem_proc_yield","text":"Kuhn, Max, Kjell Johnson. Applied predictive modeling. New York: Springer, 2013.","code":""},{"path":"https://modeldata.tidymodels.org/reference/chem_proc_yield.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chemical manufacturing process data set — chem_proc_yield","text":"chem_proc_yield tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/chem_proc_yield.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chemical manufacturing process data set — chem_proc_yield","text":"data set contains information chemical manufacturing process, goal understand relationship process resulting final product yield.  Raw material process put sequence 27 steps generate final pharmaceutical product.  starting material generated biological unit range quality characteristics.  objective project develop model predict percent yield manufacturing process.  data set consisted 177 samples biological material 57 characteristics measured.  57 characteristics, 12 measurements biological starting material, 45 measurements manufacturing process.  process variables included measurements temperature, drying time, washing time, concentrations -products various steps.  process measurements can controlled, others observed.  Predictors continuous, count, categorical; correlated, contain missing values.  Samples independent sets samples come batch biological starting material. Columns: yield:  numeric bio_material_01 - bio_material_12:  numeric man_proc_01 - man_proc_45:  numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/chem_proc_yield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chemical manufacturing process data set — chem_proc_yield","text":"","code":"data(chem_proc_yield) str(chem_proc_yield) #> tibble [176 × 58] (S3: tbl_df/tbl/data.frame) #>  $ yield          : num [1:176] 38 42.4 42 41.4 42.5 ... #>  $ bio_material_01: num [1:176] 6.25 8.01 8.01 8.01 7.47 6.12 7.48 6.94 6.94 6.94 ... #>  $ bio_material_02: num [1:176] 49.6 61 61 61 63.3 ... #>  $ bio_material_03: num [1:176] 57 67.5 67.5 67.5 72.2 ... #>  $ bio_material_04: num [1:176] 12.7 14.7 14.7 14.7 14 ... #>  $ bio_material_05: num [1:176] 19.5 19.4 19.4 19.4 17.9 ... #>  $ bio_material_06: num [1:176] 43.7 53.1 53.1 53.1 54.7 ... #>  $ bio_material_07: num [1:176] 100 100 100 100 100 100 100 100 100 100 ... #>  $ bio_material_08: num [1:176] 16.7 19 19 19 18.2 ... #>  $ bio_material_09: num [1:176] 11.4 12.6 12.6 12.6 12.8 ... #>  $ bio_material_10: num [1:176] 3.46 3.46 3.46 3.46 3.05 3.78 3.04 3.85 3.85 3.85 ... #>  $ bio_material_11: num [1:176] 138 154 154 154 148 ... #>  $ bio_material_12: num [1:176] 18.8 21.1 21.1 21.1 21.1 ... #>  $ man_proc_01    : num [1:176] NA 0 0 0 10.7 12 11.5 12 12 12 ... #>  $ man_proc_02    : num [1:176] NA 0 0 0 0 0 0 0 0 0 ... #>  $ man_proc_03    : num [1:176] NA NA NA NA NA NA 1.56 1.55 1.56 1.55 ... #>  $ man_proc_04    : num [1:176] NA 917 912 911 918 924 933 929 928 938 ... #>  $ man_proc_05    : num [1:176] NA 1032 1004 1015 1028 ... #>  $ man_proc_06    : num [1:176] NA 210 207 213 206 ... #>  $ man_proc_07    : num [1:176] NA 177 178 177 178 178 177 178 177 177 ... #>  $ man_proc_08    : num [1:176] NA 178 178 177 178 178 178 178 177 177 ... #>  $ man_proc_09    : num [1:176] 43 46.6 45.1 44.9 45 ... #>  $ man_proc_10    : num [1:176] NA NA NA NA NA NA 11.6 10.2 9.7 10.1 ... #>  $ man_proc_11    : num [1:176] NA NA NA NA NA NA 11.5 11.3 11.1 10.2 ... #>  $ man_proc_12    : num [1:176] NA 0 0 0 0 0 0 0 0 0 ... #>  $ man_proc_13    : num [1:176] 35.5 34 34.8 34.8 34.6 34 32.4 33.6 33.9 34.3 ... #>  $ man_proc_14    : num [1:176] 4898 4869 4878 4897 4992 ... #>  $ man_proc_15    : num [1:176] 6108 6095 6087 6102 6233 ... #>  $ man_proc_16    : num [1:176] 4682 4617 4617 4635 4733 ... #>  $ man_proc_17    : num [1:176] 35.5 34 34.8 34.8 33.9 33.4 33.8 33.6 33.9 35.3 ... #>  $ man_proc_18    : num [1:176] 4865 4867 4877 4872 4886 ... #>  $ man_proc_19    : num [1:176] 6049 6097 6078 6073 6102 ... #>  $ man_proc_20    : num [1:176] 4665 4621 4621 4611 4659 ... #>  $ man_proc_21    : num [1:176] 0 0 0 0 -0.7 -0.6 1.4 0 0 1 ... #>  $ man_proc_22    : num [1:176] NA 3 4 5 8 9 1 2 3 4 ... #>  $ man_proc_23    : num [1:176] NA 0 1 2 4 1 1 2 3 1 ... #>  $ man_proc_24    : num [1:176] NA 3 4 5 18 1 1 2 3 4 ... #>  $ man_proc_25    : num [1:176] 4873 4869 4897 4892 4930 ... #>  $ man_proc_26    : num [1:176] 6074 6107 6116 6111 6151 ... #>  $ man_proc_27    : num [1:176] 4685 4630 4637 4630 4684 ... #>  $ man_proc_28    : num [1:176] 10.7 11.2 11.1 11.1 11.3 11.4 11.2 11.1 11.3 11.4 ... #>  $ man_proc_29    : num [1:176] 21 21.4 21.3 21.3 21.6 21.7 21.2 21.2 21.5 21.7 ... #>  $ man_proc_30    : num [1:176] 9.9 9.9 9.4 9.4 9 10.1 11.2 10.9 10.5 9.8 ... #>  $ man_proc_31    : num [1:176] 69.1 68.7 69.3 69.3 69.4 68.2 67.6 67.9 68 68.5 ... #>  $ man_proc_32    : num [1:176] 156 169 173 171 171 173 159 161 160 164 ... #>  $ man_proc_33    : num [1:176] 66 66 66 68 70 70 65 65 65 66 ... #>  $ man_proc_34    : num [1:176] 2.4 2.6 2.6 2.5 2.5 2.5 2.5 2.5 2.5 2.5 ... #>  $ man_proc_35    : num [1:176] 486 508 509 496 468 490 475 478 491 488 ... #>  $ man_proc_36    : num [1:176] 0.019 0.019 0.018 0.018 0.017 0.018 0.019 0.019 0.019 0.019 ... #>  $ man_proc_37    : num [1:176] 0.5 2 0.7 1.2 0.2 0.4 0.8 1 1.2 1.8 ... #>  $ man_proc_38    : num [1:176] 3 2 2 2 2 2 2 2 3 3 ... #>  $ man_proc_39    : num [1:176] 7.2 7.2 7.2 7.2 7.3 7.2 7.3 7.3 7.4 7.1 ... #>  $ man_proc_40    : num [1:176] NA 0.1 0 0 0 0 0 0 0 0 ... #>  $ man_proc_41    : num [1:176] NA 0.15 0 0 0 0 0 0 0 0 ... #>  $ man_proc_42    : num [1:176] 11.6 11.1 12 10.6 11 11.5 11.7 11.4 11.4 11.3 ... #>  $ man_proc_43    : num [1:176] 3 0.9 1 1.1 1.1 2.2 0.7 0.8 0.9 0.8 ... #>  $ man_proc_44    : num [1:176] 1.8 1.9 1.8 1.8 1.7 1.8 2 2 1.9 1.9 ... #>  $ man_proc_45    : num [1:176] 2.4 2.2 2.3 2.1 2.1 2 2.2 2.2 2.1 2.4 ..."},{"path":"https://modeldata.tidymodels.org/reference/concrete.html","id":null,"dir":"Reference","previous_headings":"","what":"Compressive strength of concrete mixtures — concrete","title":"Compressive strength of concrete mixtures — concrete","text":"Yeh (2006) describes aggregated data set experimental designs used test compressive strength concrete mixtures. data used Kuhn Johnson (2013).","code":""},{"path":"https://modeldata.tidymodels.org/reference/concrete.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compressive strength of concrete mixtures — concrete","text":"Yeh (2006). \"Analysis Strength Concrete Using Design Experiments Neural Networks.\" Journal Materials Civil Engineering, 18, 597-604. Kuhn, M., Johnson, K. (2013) Applied Predictive Modeling, Springer.","code":""},{"path":"https://modeldata.tidymodels.org/reference/concrete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compressive strength of concrete mixtures — concrete","text":"concrete tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/concrete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compressive strength of concrete mixtures — concrete","text":"","code":"data(concrete) str(concrete) #> tibble [1,030 × 9] (S3: tbl_df/tbl/data.frame) #>  $ cement              : num [1:1030] 540 540 332 332 199 ... #>  $ blast_furnace_slag  : num [1:1030] 0 0 142 142 132 ... #>  $ fly_ash             : num [1:1030] 0 0 0 0 0 0 0 0 0 0 ... #>  $ water               : num [1:1030] 162 162 228 228 192 228 228 228 228 228 ... #>  $ superplasticizer    : num [1:1030] 2.5 2.5 0 0 0 0 0 0 0 0 ... #>  $ coarse_aggregate    : num [1:1030] 1040 1055 932 932 978 ... #>  $ fine_aggregate      : num [1:1030] 676 676 594 594 826 ... #>  $ age                 : int [1:1030] 28 28 270 365 360 90 365 28 28 28 ... #>  $ compressive_strength: num [1:1030] 80 61.9 40.3 41 44.3 ..."},{"path":"https://modeldata.tidymodels.org/reference/covers.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw cover type data — covers","title":"Raw cover type data — covers","text":"data raw data describing different types forest cover-types UCI Machine Learning Database (see link ). one column data difference pieces textual information (variable lengths).","code":""},{"path":"https://modeldata.tidymodels.org/reference/covers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Raw cover type data — covers","text":"https://archive.ics.uci.edu/ml/machine-learning-databases/covtype/covtype.info","code":""},{"path":"https://modeldata.tidymodels.org/reference/covers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Raw cover type data — covers","text":"covers data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/covers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw cover type data — covers","text":"","code":"data(covers) str(covers) #> 'data.frame':\t40 obs. of  1 variable: #>  $ description: chr  \"1,cathedral family,rock outcrop complex,extremely stony\" \"2,vanet,ratake families complex,very stony\" \"3,haploborolis,rock outcrop complex,rubbly\" \"4,ratake family,rock outcrop complex,rubbly\" ..."},{"path":"https://modeldata.tidymodels.org/reference/credit_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Credit data — credit_data","title":"Credit data — credit_data","text":"data website Dr. Lluís . Belanche Muñoz way github repository Dr. Gaston Sanchez. One data point missing outcome removed original data.","code":""},{"path":"https://modeldata.tidymodels.org/reference/credit_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Credit data — credit_data","text":"https://github.com/gastonstat/CreditScoring, http://bit.ly/2kkBFrk","code":""},{"path":"https://modeldata.tidymodels.org/reference/credit_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Credit data — credit_data","text":"credit_data data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/credit_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Credit data — credit_data","text":"","code":"data(credit_data) str(credit_data) #> 'data.frame':\t4454 obs. of  14 variables: #>  $ Status   : Factor w/ 2 levels \"bad\",\"good\": 2 2 1 2 2 2 2 2 2 1 ... #>  $ Seniority: int  9 17 10 0 0 1 29 9 0 0 ... #>  $ Home     : Factor w/ 6 levels \"ignore\",\"other\",..: 6 6 3 6 6 3 3 4 3 4 ... #>  $ Time     : int  60 60 36 60 36 60 60 12 60 48 ... #>  $ Age      : int  30 58 46 24 26 36 44 27 32 41 ... #>  $ Marital  : Factor w/ 5 levels \"divorced\",\"married\",..: 2 5 2 4 4 2 2 4 2 2 ... #>  $ Records  : Factor w/ 2 levels \"no\",\"yes\": 1 1 2 1 1 1 1 1 1 1 ... #>  $ Job      : Factor w/ 4 levels \"fixed\",\"freelance\",..: 2 1 2 1 1 1 1 1 2 4 ... #>  $ Expenses : int  73 48 90 63 46 75 75 35 90 90 ... #>  $ Income   : int  129 131 200 182 107 214 125 80 107 80 ... #>  $ Assets   : int  0 0 3000 2500 0 3500 10000 0 15000 0 ... #>  $ Debt     : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ Amount   : int  800 1000 2000 900 310 650 1600 200 1200 1200 ... #>  $ Price    : int  846 1658 2985 1325 910 1645 1800 1093 1957 1468 ..."},{"path":"https://modeldata.tidymodels.org/reference/crickets.html","id":null,"dir":"Reference","previous_headings":"","what":"Rates of Cricket Chirps — crickets","title":"Rates of Cricket Chirps — crickets","text":"data McDonald (2009), way Mangiafico (2015), relationship ambient temperature rate cricket chirps per minute. Data collected two species genus Oecanthus: O. exclamationis O. niveus. data contained data frame called crickets total 31 data points.","code":""},{"path":"https://modeldata.tidymodels.org/reference/crickets.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Rates of Cricket Chirps — crickets","text":"Mangiafico, S. 2015. \"R Companion Handbook Biological Statistics.\" https://rcompanion.org/handbook/. McDonald, J. 2009. Handbook Biological Statistics. Sparky House Publishing.","code":""},{"path":"https://modeldata.tidymodels.org/reference/crickets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rates of Cricket Chirps — crickets","text":"crickets tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/crickets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rates of Cricket Chirps — crickets","text":"","code":"data(crickets) str(crickets) #> tibble [31 × 3] (S3: tbl_df/tbl/data.frame) #>  $ species: Factor w/ 2 levels \"O. exclamationis\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ temp   : num [1:31] 20.8 20.8 24 24 24 24 26.2 26.2 26.2 26.2 ... #>  $ rate   : num [1:31] 67.9 65.1 77.3 78.7 79.4 80.4 85.8 86.6 87.5 89.1 ..."},{"path":"https://modeldata.tidymodels.org/reference/deliveries.html","id":null,"dir":"Reference","previous_headings":"","what":"Food Delivery Time Data — deliveries","title":"Food Delivery Time Data — deliveries","text":"Food Delivery Time Data","code":""},{"path":"https://modeldata.tidymodels.org/reference/deliveries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Food Delivery Time Data — deliveries","text":"deliveries tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/deliveries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Food Delivery Time Data — deliveries","text":"data study food delivery times minutes (.e., time initial order receiving food) single restaurant. data contains 10,012 orders specific restaurant. predictors include: time, decimal hours, order. day week order. approximate distance miles restaurant delivery location. set 27 predictors count number distinct menu items order. times censored.","code":""},{"path":"https://modeldata.tidymodels.org/reference/deliveries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Food Delivery Time Data — deliveries","text":"","code":"data(deliveries) str(deliveries) #> tibble [10,012 × 31] (S3: tbl_df/tbl/data.frame) #>  $ time_to_delivery: num [1:10012] 16.1 22.9 30.3 33.4 27.2 ... #>  $ hour            : num [1:10012] 11.9 19.2 18.4 15.8 19.6 ... #>  $ day             : Factor w/ 7 levels \"Mon\",\"Tue\",\"Wed\",..: 4 2 5 4 5 6 7 4 5 7 ... #>  $ distance        : num [1:10012] 3.15 3.69 2.06 5.97 2.52 3.35 2.46 2.21 2.62 2.75 ... #>  $ item_01         : int [1:10012] 0 0 0 0 0 1 0 0 0 0 ... #>  $ item_02         : int [1:10012] 0 0 0 0 0 0 0 0 0 2 ... #>  $ item_03         : int [1:10012] 2 0 0 0 0 0 1 1 0 1 ... #>  $ item_04         : int [1:10012] 0 0 0 0 1 1 1 0 0 0 ... #>  $ item_05         : int [1:10012] 0 0 1 0 0 0 0 0 0 0 ... #>  $ item_06         : int [1:10012] 0 0 0 0 0 0 0 1 0 0 ... #>  $ item_07         : int [1:10012] 0 0 0 0 1 1 0 0 1 0 ... #>  $ item_08         : int [1:10012] 0 0 0 0 0 0 0 1 0 0 ... #>  $ item_09         : int [1:10012] 0 0 0 0 0 1 0 0 0 0 ... #>  $ item_10         : int [1:10012] 1 0 0 0 0 0 0 0 0 0 ... #>  $ item_11         : int [1:10012] 1 0 0 0 1 1 0 0 0 0 ... #>  $ item_12         : int [1:10012] 0 0 0 1 0 0 0 0 0 1 ... #>  $ item_13         : int [1:10012] 0 0 0 0 0 0 0 0 0 0 ... #>  $ item_14         : int [1:10012] 0 0 0 0 1 0 0 0 0 0 ... #>  $ item_15         : int [1:10012] 0 0 0 0 0 0 0 0 1 0 ... #>  $ item_16         : int [1:10012] 0 0 0 0 0 0 0 0 0 0 ... #>  $ item_17         : int [1:10012] 0 0 0 0 0 0 0 0 0 1 ... #>  $ item_18         : int [1:10012] 0 1 0 0 0 0 0 0 0 1 ... #>  $ item_19         : int [1:10012] 0 0 0 0 0 0 0 0 0 0 ... #>  $ item_20         : int [1:10012] 0 0 1 0 0 0 0 0 0 0 ... #>  $ item_21         : int [1:10012] 0 0 0 0 0 0 0 1 0 0 ... #>  $ item_22         : int [1:10012] 0 0 0 0 0 1 1 0 0 1 ... #>  $ item_23         : int [1:10012] 0 0 0 0 0 0 0 0 0 0 ... #>  $ item_24         : int [1:10012] 0 0 1 0 0 1 0 0 0 0 ... #>  $ item_25         : int [1:10012] 0 0 0 0 0 0 0 0 0 0 ... #>  $ item_26         : int [1:10012] 0 0 0 0 0 0 0 0 1 0 ... #>  $ item_27         : int [1:10012] 0 0 0 1 1 0 0 0 0 0 ..."},{"path":"https://modeldata.tidymodels.org/reference/drinks.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample time series data — drinks","title":"Sample time series data — drinks","text":"Sample time series data","code":""},{"path":"https://modeldata.tidymodels.org/reference/drinks.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample time series data — drinks","text":"Federal Reserve Bank St. Louis website https://fred.stlouisfed.org/series/S4248SM144NCEN","code":""},{"path":"https://modeldata.tidymodels.org/reference/drinks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample time series data — drinks","text":"drinks tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/drinks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample time series data — drinks","text":"Drink sales. exact name series FRED : \"Merchant Wholesalers, Except Manufacturers' Sales Branches Offices Sales: Nondurable Goods: Beer, Wine, Distilled Alcoholic Beverages Sales\"","code":""},{"path":"https://modeldata.tidymodels.org/reference/drinks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample time series data — drinks","text":"","code":"data(drinks) str(drinks) #> tibble [309 × 2] (S3: tbl_df/tbl/data.frame) #>  $ date          : Date[1:309], format: \"1992-01-01\" \"1992-02-01\" ... #>  $ S4248SM144NCEN: num [1:309] 3459 3458 4002 4564 4221 ..."},{"path":"https://modeldata.tidymodels.org/reference/grants.html","id":null,"dir":"Reference","previous_headings":"","what":"Grant acceptance data — grants","title":"Grant acceptance data — grants","text":"data set related success failure academic grants.","code":""},{"path":"https://modeldata.tidymodels.org/reference/grants.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Grant acceptance data — grants","text":"Kuhn Johnson (2013). Applied Predictive Modeling. Springer.","code":""},{"path":"https://modeldata.tidymodels.org/reference/grants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Grant acceptance data — grants","text":"grants_other,grants_test,grants_2008 two tibbles integer vector data points used training","code":""},{"path":"https://modeldata.tidymodels.org/reference/grants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Grant acceptance data — grants","text":"data discussed Kuhn Johnson (2013): \"data 2011 Kaggle competition sponsored University Melbourne interest predicting whether grant application accepted. Since public funding grants decreased time, triaging grant applications based likelihood success important estimating amount potential funding university. addition predicting grant success, university sought understand factors important predicting success.\" data ranged 2005 2008 data spending strategy driven date grant. Kuhn Johnson (2013) describe: \"compromise taken build models pre-2008 data tune evaluating random sample 2,075 grants 2008. optimal parameters determined, final model built using parameters entire training set (.e., data prior 2008 additional 2,075 grants). small holdout set 518 grants 2008 used ensure gross methodology errors occur repeatedly evaluating 2008 data model tuning. text, set samples called 2 0 0 8 holdout set. small set year 2008 grants referred test set evaluated set candidate models identified.\" emulate , grants_other contains training (pre-2008, n = 6,633) holdout/validation data (2008, n = 1,557). grants_test 518 grant samples 2008. object grants_2008 integer vector can used separate modeling holdout/validation sets.","code":""},{"path":"https://modeldata.tidymodels.org/reference/grants.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Grant acceptance data — grants","text":"","code":"data(grants) str(grants_other) #> 'data.frame':\t8190 obs. of  1503 variables: #>  $ class                   : Factor w/ 2 levels \"successful\",\"unsuccessful\": 1 1 1 1 2 1 2 2 1 1 ... #>  $ num_ci                  : int  1 1 3 1 1 1 3 2 2 1 ... #>  $ num_dr                  : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ num_ea                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_eci                 : int  0 0 3 3 0 0 1 1 2 3 ... #>  $ num_hv                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_ps                  : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ num_sr                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_sci                 : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ num_unk                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1900                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1925                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1930                 : int  0 0 0 0 0 0 0 0 0 1 ... #>  $ ci_1935                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1940                 : int  0 0 0 0 0 0 0 1 0 0 ... #>  $ dr_1940                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1945                 : int  0 0 0 0 0 0 0 0 1 0 ... #>  $ dr_1945                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1945                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1945                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1950                 : int  0 0 2 0 0 1 1 0 1 0 ... #>  $ dr_1950                 : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ eci_1950                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1950                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1950                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1955                 : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ dr_1955                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1955                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1955                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1955                 : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ ci_1960                 : int  0 1 0 0 0 0 2 0 0 0 ... #>  $ dr_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1960                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1965                 : int  1 0 0 0 1 0 0 1 0 0 ... #>  $ dr_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1965                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1970                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1975                 : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ dr_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1975                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ sr_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1985                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1985                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_asia_pacific         : int  1 0 1 0 0 0 0 0 0 0 ... #>  $ dr_asia_pacific         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_asia_pacific         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_australia            : int  0 1 2 1 0 1 2 2 2 0 ... #>  $ dr_australia            : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ eci_australia           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_australia            : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_australia            : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ ci_eastern_europe       : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_great_britain        : int  0 0 0 0 0 0 1 0 0 0 ... #>  $ dr_great_britain        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_great_britain       : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_great_britain        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_middle_eastand_africa: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_new_zealand          : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_new_zealand          : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_north_america        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_south_africa         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_south_africa         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_the_americas         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_the_americas         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_western_europe       : int  0 0 0 0 1 0 0 0 0 0 ... #>  $ eci_western_europe      : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_english              : int  0 0 0 0 0 0 0 0 2 0 ... #>  $ dr_english              : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_english             : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_english              : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_other_lang           : int  1 0 0 0 0 0 0 0 0 0 ... #>  $ dr_other_lang           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_ph_d                 : int  0 1 2 1 1 1 2 0 2 0 ... #>  $ dr_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_ph_d                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_ph_d                 : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ sr_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_ci              : num  0 0 0 0 0 2 0 0 2 0 ... #>  $ unsuccess_ci            : num  0 0 0 0 0 0 1 3 1 0 ... #>  $ success_dr              : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ unsuccess_dr            : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_eci             : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ unsuccess_eci           : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_ps              : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ unsuccess_ps            : num  0 0 0 0 0 0 0 0 0 0 ... #>   [list output truncated] str(grants_test) #> 'data.frame':\t518 obs. of  1503 variables: #>  $ class                   : Factor w/ 2 levels \"successful\",\"unsuccessful\": 2 2 1 1 1 1 1 1 1 1 ... #>  $ num_ci                  : int  2 2 2 0 1 3 0 1 1 1 ... #>  $ num_dr                  : int  0 1 0 0 0 0 0 1 0 0 ... #>  $ num_ea                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_eci                 : int  0 2 0 0 0 1 1 1 0 0 ... #>  $ num_hv                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_ps                  : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ num_sr                  : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ num_sci                 : int  0 0 3 1 0 0 0 0 0 0 ... #>  $ num_unk                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1900                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1925                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1930                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1935                 : int  0 1 0 0 0 0 0 0 0 0 ... #>  $ ci_1940                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_1940                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1945                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_1945                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1945                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1945                 : int  0 0 0 1 0 0 0 0 0 0 ... #>  $ ci_1950                 : int  0 0 0 0 0 2 0 0 0 0 ... #>  $ dr_1950                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1950                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1950                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1950                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1955                 : int  1 0 0 0 1 0 0 0 1 0 ... #>  $ dr_1955                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1955                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1955                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1955                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1960                 : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ dr_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1960                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1960                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1965                 : int  0 0 0 0 0 0 0 1 0 0 ... #>  $ dr_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_1965                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1965                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1970                 : int  1 1 0 0 0 0 0 0 0 1 ... #>  $ dr_1970                 : int  0 0 0 0 0 0 0 1 0 0 ... #>  $ eci_1970                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1970                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1975                 : int  0 0 1 0 0 1 0 0 0 0 ... #>  $ dr_1975                 : int  0 1 0 0 0 0 0 0 0 0 ... #>  $ eci_1975                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ sr_1975                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_1980                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_1985                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_1985                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_asia_pacific         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_asia_pacific         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_asia_pacific         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_australia            : int  2 1 2 0 1 3 0 1 1 1 ... #>  $ dr_australia            : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_australia           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_australia            : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_australia            : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_eastern_europe       : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_great_britain        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_great_britain        : int  0 0 0 0 0 0 0 1 0 0 ... #>  $ eci_great_britain       : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_great_britain        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_middle_eastand_africa: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_new_zealand          : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_new_zealand          : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_north_america        : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_south_africa         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_south_africa         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_the_americas         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_the_americas         : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_western_europe       : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_western_europe      : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_english              : int  0 0 1 0 0 0 0 0 0 0 ... #>  $ dr_english              : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_english             : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_english              : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_other_lang           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dr_other_lang           : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ci_ph_d                 : int  2 1 2 0 0 2 0 1 0 1 ... #>  $ dr_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ eci_ph_d                : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ hv_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ ps_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ sr_ph_d                 : int  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_ci              : num  5 6 1 0 2 6 0 2 5 0 ... #>  $ unsuccess_ci            : num  2 13 0 0 4 3 0 5 15 1 ... #>  $ success_dr              : num  0 0 0 0 0 0 0 2 0 0 ... #>  $ unsuccess_dr            : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_eci             : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ unsuccess_eci           : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ success_ps              : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ unsuccess_ps            : num  0 0 0 0 0 0 0 0 0 0 ... #>   [list output truncated] str(grants_2008) #>  int [1:6633] 1 2 3 4 5 6 7 8 9 10 ..."},{"path":"https://modeldata.tidymodels.org/reference/hepatic_injury_qsar.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","title":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","text":"quantitative structure-activity relationship (QSAR) data set predict molecule risk associated liver function.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hepatic_injury_qsar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","text":"Kuhn, Max, Kjell Johnson. Applied predictive modeling. New York: Springer, 2013.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hepatic_injury_qsar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","text":"hepatic_injury_qsar tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/hepatic_injury_qsar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","text":" data set used develop model predicting compounds' probability causing hepatic injury (.e. liver damage). data set consisted 281 unique compounds; 376 predictors measured computed . response categorical (either \"none\", \"mild\", \"severe\"), highly unbalanced. kind response often occurs pharmaceutical data companies steer away creating molecules undesirable characteristics. Therefore, well-behaved molecules often greatly outnumber undesirable molecules. predictors consisted measurements 184 biological screens 192 chemical feature predictors. biological predictors represent activity screen take values 0 10 mode 4. chemical feature predictors represent counts important sub-structures well measures physical properties thought associated hepatic injury. Columns: class:  ordered factor (levels: 'none', 'mild', 'severe') bio_assay_001 - bio_assay_184:  numeric chem_fp_001 - chem_fp_192:  numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/hepatic_injury_qsar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicting hepatic injury from chemical information — hepatic_injury_qsar","text":"","code":"data(hepatic_injury_qsar) str(hepatic_injury_qsar) #> tibble [281 × 377] (S3: tbl_df/tbl/data.frame) #>  $ class        : Ord.factor w/ 3 levels \"none\"<\"mild\"<..: 2 1 1 3 2 3 1 1 1 1 ... #>  $ bio_assay_001: num [1:281] 4 4 4 4.9 4 4 4 4 4 4 ... #>  $ bio_assay_002: num [1:281] 4 4.5 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_003: num [1:281] 4 4 4 4.5 4 4 4 4.5 4 4 ... #>  $ bio_assay_004: num [1:281] 6 6 6 4 6 6 6 6 5.2 6 ... #>  $ bio_assay_005: num [1:281] 4 4 4 4 4 4 4 4 4.5 4 ... #>  $ bio_assay_006: num [1:281] 4 4 4 4.9 4 4 4.5 4 4.5 4 ... #>  $ bio_assay_007: num [1:281] 4 4 4 4.5 4 4 4.5 4 4 4.5 ... #>  $ bio_assay_008: num [1:281] 4 4 4 4 4 4 4 4 5 4 ... #>  $ bio_assay_009: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_010: num [1:281] 4 4.5 4.5 4 4 4 4 4.5 5.3 4 ... #>  $ bio_assay_011: num [1:281] 4 4 4 4 4 4 4.5 4 4.5 4 ... #>  $ bio_assay_012: num [1:281] 4 4 4 4 4.5 4.5 4 4.5 4.5 4 ... #>  $ bio_assay_013: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_014: num [1:281] 4 4 4 4 4 4 4 4 5.2 4 ... #>  $ bio_assay_015: num [1:281] 4 4 4 6.9 5.5 4.7 4.5 4 4.5 5.3 ... #>  $ bio_assay_016: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_017: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_018: num [1:281] 4 4 4 4.9 4 4 4.5 4 4.5 4 ... #>  $ bio_assay_019: num [1:281] 4 4.5 4 5.5 4 4 6.5 4 6.5 4 ... #>  $ bio_assay_020: num [1:281] 4 4.5 4 4 4.5 4 4 4.5 4 4 ... #>  $ bio_assay_021: num [1:281] 4 4 4 4 4.5 4 4.5 4 4 4 ... #>  $ bio_assay_022: num [1:281] 4 4 4 4 4 4 4 0 4 4 ... #>  $ bio_assay_023: num [1:281] 4 4 4 4 4 4 4 4 4.5 4 ... #>  $ bio_assay_024: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_025: num [1:281] 4 4 4 4.8 4 4 4 4 5.3 4 ... #>  $ bio_assay_026: num [1:281] 4 4 4 5.2 4 4 4 4 5.4 4 ... #>  $ bio_assay_027: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_028: num [1:281] 4.5 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_029: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_030: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_031: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_032: num [1:281] 4 4 4 0 4 4 4 4 0 4 ... #>  $ bio_assay_033: int [1:281] 4 0 4 4 4 4 4 4 0 4 ... #>  $ bio_assay_034: num [1:281] 4 4 4 6 4 4 5.9 4 6.3 4 ... #>  $ bio_assay_035: num [1:281] 4 4 4 6.3 4 4 4 4 5.7 4 ... #>  $ bio_assay_036: num [1:281] 4 4 4 4 5.8 4 5.2 4 7.5 4 ... #>  $ bio_assay_037: num [1:281] 4 4 4 4.5 4 4 4.8 4 6.1 4 ... #>  $ bio_assay_038: num [1:281] 4 4 4 5.8 4 4.5 4 4 4.5 4 ... #>  $ bio_assay_039: num [1:281] 4 4 4.5 4.5 4 4 4 4 4 4 ... #>  $ bio_assay_040: num [1:281] 4.5 4 4 5.5 4 4 6.1 5.3 5.5 4.5 ... #>  $ bio_assay_041: num [1:281] 4 4 4 4 4 4 4 4 5 4 ... #>  $ bio_assay_042: num [1:281] 4 4 4.5 4 4 4 5.6 4 4.5 4 ... #>  $ bio_assay_043: num [1:281] 4 4 4 4.5 4 4 4 4 4 4 ... #>  $ bio_assay_044: num [1:281] 4 4 4 6 4 4 4.5 4 4 4 ... #>  $ bio_assay_045: num [1:281] 4 4 4 4 4 0 4 4 4 4 ... #>  $ bio_assay_046: num [1:281] 4 4 4 5.1 4 4 4.5 4 5.7 4 ... #>  $ bio_assay_047: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_048: num [1:281] 4 4 4 4.9 4 4 4.5 4 5.7 4 ... #>  $ bio_assay_049: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_050: num [1:281] 4 4 4 4.5 4 4 4 4 4.9 4 ... #>  $ bio_assay_051: num [1:281] 4 4 4 5 4 4 5.4 4 7.2 4 ... #>  $ bio_assay_052: num [1:281] 4 4 4 4.7 4 4 4.9 4 6.2 4 ... #>  $ bio_assay_053: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_054: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_055: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_056: num [1:281] 4 4 4 4 4 0 4 4 4 4 ... #>  $ bio_assay_057: num [1:281] 4 4 4 4 4 0 4 4 4 4 ... #>  $ bio_assay_058: num [1:281] 4 4 4 4 4 4 4 4 5.4 4 ... #>  $ bio_assay_059: num [1:281] 4 4 4 4 4 4 4 4 4 4.5 ... #>  $ bio_assay_060: num [1:281] 4 4 4 4 4 4 4 4 5.1 4 ... #>  $ bio_assay_061: num [1:281] 4 4 4 4 4 4 4 4 0 4 ... #>  $ bio_assay_062: num [1:281] 4 4 4 4 4 4 4 4 4.5 4 ... #>  $ bio_assay_063: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_064: num [1:281] 4 4 4 5.3 4 4 5.1 4 6.8 4 ... #>  $ bio_assay_065: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_066: num [1:281] 4 4 4 4 4 4 4 4 0 4 ... #>  $ bio_assay_067: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_068: num [1:281] 4 4 4 4.6 4 4 5.6 4 5.9 4.5 ... #>  $ bio_assay_069: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_070: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_071: num [1:281] 4 4 4 5.5 4 4 5 4 6 4 ... #>  $ bio_assay_072: num [1:281] 4 4 4 5.5 4 4 4 4 5.7 4 ... #>  $ bio_assay_073: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_074: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_075: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_076: num [1:281] 4 4 4 4 4 4 4 4.5 4 4 ... #>  $ bio_assay_077: num [1:281] 4 4 4 4.5 4 4 4 4 4.5 4 ... #>  $ bio_assay_078: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_079: num [1:281] 4 4 4 4 4 4 4 4 4.2 4 ... #>  $ bio_assay_080: num [1:281] 4 4 4 0 4 4.5 4 4 4 4 ... #>  $ bio_assay_081: num [1:281] 4 0 4 0 4 4 4 4 4 4.5 ... #>  $ bio_assay_082: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_083: num [1:281] 4.5 4 4 4 4 4 4 4.5 4.5 4 ... #>  $ bio_assay_084: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_085: num [1:281] 5.4 4 4 4.5 4.5 4 4 4 4 4 ... #>  $ bio_assay_086: num [1:281] 4 4 4 4.9 4 4 4 4 5.2 4 ... #>  $ bio_assay_087: num [1:281] 4 4 4 4.5 4 4 4.5 4 4 4 ... #>  $ bio_assay_088: int [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_089: num [1:281] 4 4 4 4.5 4 4 4 4 4 4 ... #>  $ bio_assay_090: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_091: num [1:281] 4 4 4 5.3 4 4 4 4 4 4 ... #>  $ bio_assay_092: num [1:281] 4 4 4 4.1 4 4 4 4 4 4 ... #>  $ bio_assay_093: num [1:281] 4 4 4 4 4 0 4 4 4 4 ... #>  $ bio_assay_094: num [1:281] 4 4 4 4 4 0 4 4 4 4 ... #>  $ bio_assay_095: num [1:281] 4 4 4 4 4 4 4 4 4 4 ... #>  $ bio_assay_096: num [1:281] 4.5 4 4 4 4 4 4 4 5 4 ... #>  $ bio_assay_097: num [1:281] 4 4.4 4 5.1 4.7 4 7.2 4 5.4 5.1 ... #>  $ bio_assay_098: num [1:281] 4 4 4 6.1 4.5 4 6.2 4 4 4.5 ... #>   [list output truncated]"},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Hotel Rate Data — hotel_rates","title":"Daily Hotel Rate Data — hotel_rates","text":"data set predict average daily rate hotel Lisbon Portugal.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily Hotel Rate Data — hotel_rates","text":"https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-02-11","code":""},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily Hotel Rate Data — hotel_rates","text":"Data originally described Antonio, de Almeida, Nunes (2019). version data filtered one hotel (\"Resort Hotel\") intended regression data set predicting average daily rate room. data post-2016; 2016 data used predictor historical daily rates. See hotel_rates.R file data-raw directory package understand filters used creating version data. agent company fields changed random characters use set random names. outcome column avg_price_per_room.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":"license","dir":"Reference","previous_headings":"","what":"License","title":"Daily Hotel Rate Data — hotel_rates","text":"license given data; See reference source.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily Hotel Rate Data — hotel_rates","text":"Antonio, N., de Almeida, ., Nunes, L. (2019). Hotel booking demand datasets. Data Brief, 22, 41-49.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hotel_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily Hotel Rate Data — hotel_rates","text":"","code":"if (FALSE) { str(hotel_rates) }"},{"path":"https://modeldata.tidymodels.org/reference/hpc_cv.html","id":null,"dir":"Reference","previous_headings":"","what":"Class probability predictions — hpc_cv","title":"Class probability predictions — hpc_cv","text":"Class probability predictions","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_cv.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Class probability predictions — hpc_cv","text":"Kuhn, M., Johnson, K. (2013) Applied Predictive Modeling, Springer","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_cv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class probability predictions — hpc_cv","text":"hpc_cv data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_cv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Class probability predictions — hpc_cv","text":"data frame contains predicted classes class probabilities linear discriminant analysis model fit HPC data set Kuhn Johnson (2013). data assessment sets 10-fold cross-validation scheme. data column columns true class (obs), class prediction (pred) columns class probability (columns VF, F, M, L). Additionally, column resample indicator included.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_cv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class probability predictions — hpc_cv","text":"","code":"data(hpc_cv) str(hpc_cv) #> 'data.frame':\t3467 obs. of  7 variables: #>  $ obs     : Factor w/ 4 levels \"VF\",\"F\",\"M\",\"L\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ pred    : Factor w/ 4 levels \"VF\",\"F\",\"M\",\"L\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ VF      : num  0.914 0.938 0.947 0.929 0.942 ... #>  $ F       : num  0.0779 0.0571 0.0495 0.0653 0.0543 ... #>  $ M       : num  0.00848 0.00482 0.00316 0.00579 0.00381 ... #>  $ L       : num  1.99e-05 1.01e-05 5.00e-06 1.56e-05 7.29e-06 ... #>  $ Resample: chr  \"Fold01\" \"Fold01\" \"Fold01\" \"Fold01\" ..."},{"path":"https://modeldata.tidymodels.org/reference/hpc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"High-performance computing system data — hpc_data","title":"High-performance computing system data — hpc_data","text":"Kuhn Johnson (2013) describe data set characteristics unix jobs used classify completion times either fast (1 min less, VF), fast (1–50 min, F), moderate (5–30 min, M), long (greater 30 min, L).","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"High-performance computing system data — hpc_data","text":"Kuhn, M., Johnson, K. (2013) Applied Predictive Modeling, Springer.","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"High-performance computing system data — hpc_data","text":"hpc_data tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/hpc_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"High-performance computing system data — hpc_data","text":"","code":"data(hpc_data) str(hpc_data) #> tibble [4,331 × 8] (S3: tbl_df/tbl/data.frame) #>  $ protocol    : Factor w/ 14 levels \"A\",\"C\",\"D\",\"E\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ compounds   : num [1:4331] 997 97 101 93 100 100 105 98 101 95 ... #>  $ input_fields: num [1:4331] 137 103 75 76 82 82 88 95 91 92 ... #>  $ iterations  : num [1:4331] 20 20 10 20 20 20 20 20 20 20 ... #>  $ num_pending : num [1:4331] 0 0 0 0 0 0 0 0 0 0 ... #>  $ hour        : num [1:4331] 14 13.8 13.8 10.1 10.4 ... #>  $ day         : Factor w/ 7 levels \"Mon\",\"Tue\",\"Wed\",..: 2 2 4 5 5 3 5 5 5 3 ... #>  $ class       : Factor w/ 4 levels \"VF\",\"F\",\"M\",\"L\": 2 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/ischemic_stroke.html","id":null,"dir":"Reference","previous_headings":"","what":"Clinical data used to predict ischemic stroke — ischemic_stroke","title":"Clinical data used to predict ischemic stroke — ischemic_stroke","text":"data set predict binary outcome using imaging patient data.","code":""},{"path":"https://modeldata.tidymodels.org/reference/ischemic_stroke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Clinical data used to predict ischemic stroke — ischemic_stroke","text":"Kuhn, Max, Kjell Johnson. Feature Engineering Selection: Practical Approach Predictive Models. Chapman Hall/CRC, 2019.","code":""},{"path":"https://modeldata.tidymodels.org/reference/ischemic_stroke.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clinical data used to predict ischemic stroke — ischemic_stroke","text":"ischemic_stroke tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/ischemic_stroke.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clinical data used to predict ischemic stroke — ischemic_stroke","text":"data gathered predict patient risk ischemic stroke. historical set patients range carotid artery blockages selected. data consisted 126 patients, 44 blockages greater 70%. patients undergone Computed Tomography Angiography (CTA) generate detailed three-dimensional visualization characterization blockage. images analyzed order compute several features related disease, including: percent stenosis, arterial wall thickness, tissue characteristics lipid-rich necrotic core calcification. group patients study also follow-information whether stroke occurred subsequent point time. data patient also included commonly collected clinical characteristics risk stroke whether patient atrial fibrillation, coronary artery disease, history smoking. Demographics gender age included well. readily available risk factors can thought another potentially useful predictor set can evaluated. fact, set predictors evaluated first assess ability predict stroke since predictors easy collect, acquired patient presentation, require expensive imaging technique. Columns: stroke:  factor (levels: 'yes' '') nascet_scale:  numeric calc_vol:  numeric calc_vol_prop:  numeric matx_vol:  numeric matx_vol_prop:  numeric lrnc_vol:  numeric lrnc_vol_prop:  numeric max_calc_area:  numeric max_calc_area_prop:  numeric max_dilation_by_area:  numeric max_matx_area:  numeric max_matx_area_prop:  numeric max_lrnc_area:  numeric max_lrnc_area_prop:  numeric max_max_wall_thickness:  numeric max_remodeling_ratio:  numeric max_stenosis_by_area:  numeric max_wall_area:  numeric wall_vol:  numeric max_stenosis_by_diameter:  numeric age:  integer male:  integer smoking_history:  integer atrial_fibrillation:  integer coronary_artery_disease:  integer diabetes_history:  integer hypercholesterolemia_history:  integer hypertension_history:  integer","code":""},{"path":"https://modeldata.tidymodels.org/reference/ischemic_stroke.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clinical data used to predict ischemic stroke — ischemic_stroke","text":"","code":"data(ischemic_stroke) str(ischemic_stroke) #> tibble [126 × 29] (S3: tbl_df/tbl/data.frame) #>  $ stroke                      : Factor w/ 2 levels \"yes\",\"no\": 2 2 2 1 2 2 2 2 2 2 ... #>  $ nascet_scale                : num [1:126] 0 0 0 0 0 0 0 0 0 0 ... #>  $ calc_vol                    : num [1:126] 235.3 31.4 113.4 780.8 84.1 ... #>  $ calc_vol_prop               : num [1:126] 0.0704 0.0162 0.0381 0.2134 0.0414 ... #>  $ matx_vol                    : num [1:126] 3157 3033 3835 3519 2990 ... #>  $ matx_vol_prop               : num [1:126] 0.76 0.813 0.783 0.761 0.75 ... #>  $ lrnc_vol                    : num [1:126] 225 369 321 141 293 ... #>  $ lrnc_vol_prop               : num [1:126] 0.0911 0.134 0.083 0.0321 0.0754 ... #>  $ max_calc_area               : num [1:126] 12.35 7.13 16.29 63.35 17.58 ... #>  $ max_calc_area_prop          : num [1:126] 0.366 0.211 0.409 0.576 0.322 ... #>  $ max_dilation_by_area        : num [1:126] 521 91.7 271 2270.5 95.2 ... #>  $ max_matx_area               : num [1:126] 71.2 27.2 38.1 341.1 56.6 ... #>  $ max_matx_area_prop          : num [1:126] 0.952 0.946 0.946 0.969 0.921 ... #>  $ max_lrnc_area               : num [1:126] 21.69 6.43 5.71 6.05 7.21 ... #>  $ max_lrnc_area_prop          : num [1:126] 0.43 0.282 0.155 0.187 0.217 ... #>  $ max_max_wall_thickness      : num [1:126] 2.41 2.54 3.71 6.12 3.98 ... #>  $ max_remodeling_ratio        : num [1:126] 5.7 1.74 2.83 15.65 1.91 ... #>  $ max_stenosis_by_area        : num [1:126] 19 30.2 33.9 34.3 36.6 ... #>  $ max_wall_area               : num [1:126] 106.2 33.4 55.3 426.5 59.8 ... #>  $ wall_vol                    : num [1:126] 4192 3917 4935 4910 4045 ... #>  $ max_stenosis_by_diameter    : num [1:126] 10.5 18.6 19.7 20.3 49.3 ... #>  $ age                         : int [1:126] 72 76 72 61 65 64 82 83 85 56 ... #>  $ male                        : int [1:126] 1 1 0 1 1 1 0 0 0 0 ... #>  $ smoking_history             : int [1:126] 1 1 0 1 0 1 1 0 1 1 ... #>  $ atrial_fibrillation         : int [1:126] 0 0 0 0 0 0 0 1 0 0 ... #>  $ coronary_artery_disease     : int [1:126] 0 0 0 0 0 1 1 1 1 0 ... #>  $ diabetes_history            : int [1:126] 0 1 0 1 0 0 0 0 0 0 ... #>  $ hypercholesterolemia_history: int [1:126] 0 1 0 1 0 1 0 0 1 0 ... #>  $ hypertension_history        : int [1:126] 1 1 0 1 1 1 1 1 1 0 ..."},{"path":"https://modeldata.tidymodels.org/reference/leaf_id_flavia.html","id":null,"dir":"Reference","previous_headings":"","what":"Leaf identification data (Flavia) — leaf_id_flavia","title":"Leaf identification data (Flavia) — leaf_id_flavia","text":"Image analysis leaves predict species.","code":""},{"path":"https://modeldata.tidymodels.org/reference/leaf_id_flavia.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Leaf identification data (Flavia) — leaf_id_flavia","text":"Lakshika, Jayani PG, Thiyanga S. Talagala. \"Computer-aided interpretable features leaf image classification.\" arXiv preprint arXiv:2106.08077 (2021). https://github.com/SMART-Research/leaffeatures_paper","code":""},{"path":"https://modeldata.tidymodels.org/reference/leaf_id_flavia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leaf identification data (Flavia) — leaf_id_flavia","text":"leaf_id_flavia data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/leaf_id_flavia.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leaf identification data (Flavia) — leaf_id_flavia","text":"original manuscript: \"Flavia dataset contains 1907 leaf images. 32 different species 50-77 images. Scanners digital cameras used acquire leaf images plain background. isolated leaf images contain blades , without petiole. leaf images collected common plants Yangtze, Delta, China. leaves sampled campus Nanjing University Sun Yat-Sen arboretum, Nanking, China.\" reference details information features used prediction. Columns: species:  factor (32 levels) apex:  factor (9 levels) base:  factor (6 levels) shape:  factor (5 levels) denate_edge:  factor (levels: '' 'yes') lobed_edge:  factor (levels: '' 'yes') smooth_edge:  factor (levels: '' 'yes') toothed_edge:  factor (levels: '' 'yes') undulate_edge:  factor (levels: '' 'yes') outlying_polar:  numeric skewed_polar:  numeric clumpy_polar:  numeric sparse_polar:  numeric striated_polar:  numeric convex_polar:  numeric skinny_polar:  numeric stringy_polar:  numeric monotonic_polar:  numeric outlying_contour:  numeric skewed_contour:  numeric clumpy_contour:  numeric sparse_contour:  numeric striated_contour:  numeric convex_contour:  numeric skinny_contour:  numeric stringy_contour:  numeric monotonic_contour:  numeric num_max_ponits:  numeric num_min_points:  numeric diameter:  numeric area:  numeric perimeter:  numeric physiological_length:  numeric physiological_width:  numeric aspect_ratio:  numeric rectangularity:  numeric circularity:  numeric compactness:  numeric narrow_factor:  numeric perimeter_ratio_diameter:  numeric perimeter_ratio_length:  numeric perimeter_ratio_lw:  numeric num_convex_points:  numeric perimeter_convexity:  numeric area_convexity:  numeric area_ratio_convexity:  numeric equivalent_diameter:  numeric eccentriciry:  numeric contrast:  numeric correlation_texture:  numeric inverse_difference_moments:  numeric entropy:  numeric mean_red_val:  numeric mean_green_val:  numeric mean_blue_val:  numeric std_red_val:  numeric std_green_val:  numeric std_blue_val:  numeric correlation:  numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/leaf_id_flavia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leaf identification data (Flavia) — leaf_id_flavia","text":"","code":"data(leaf_id_flavia) str(leaf_id_flavia) #> tibble [1,907 × 59] (S3: tbl_df/tbl/data.frame) #>  $ species                   : Factor w/ 32 levels \"anhui_barberry\",..: 9 9 9 9 9 9 9 9 9 9 ... #>  $ apex                      : Factor w/ 9 levels \"acuminate\",\"acute\",..: 5 5 5 5 5 5 5 5 5 5 ... #>  $ base                      : Factor w/ 6 levels \"acuminate\",\"acute\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ shape                     : Factor w/ 5 levels \"diamond\",\"heart_shape\",..: 2 2 2 2 2 2 2 2 2 2 ... #>  $ denate_edge               : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ lobed_edge                : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ smooth_edge               : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 2 2 2 2 2 2 ... #>  $ toothed_edge              : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ undulate_edge             : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ outlying_polar            : num [1:1907] 0 0 0 0 0 0 0 0 0 0 ... #>  $ skewed_polar              : num [1:1907] 0.461 0.475 0.536 0.477 0.491 ... #>  $ clumpy_polar              : num [1:1907] 0.00648 0.0111 0.01732 0.01327 0.01116 ... #>  $ sparse_polar              : num [1:1907] 0.0145 0.0145 0.0295 0.0143 0.0142 ... #>  $ striated_polar            : num [1:1907] 0.979 0.98 0.676 0.99 0.97 ... #>  $ convex_polar              : num [1:1907] 9.00e-04 1.53e-04 3.52e-02 2.56e-06 8.95e-05 ... #>  $ skinny_polar              : num [1:1907] 0.118 0.544 0.776 0.707 0.638 ... #>  $ stringy_polar             : num [1:1907] 1 1 0.854 1 1 ... #>  $ monotonic_polar           : num [1:1907] 0.02681 0.00555 0.06848 0.09547 0.00961 ... #>  $ outlying_contour          : num [1:1907] 0 0 0 0 0 0 0 0 0 0 ... #>  $ skewed_contour            : num [1:1907] 0.495 0.532 0.545 0.468 0.501 ... #>  $ clumpy_contour            : num [1:1907] 0.0079 0.01085 0.02027 0.0109 0.00788 ... #>  $ sparse_contour            : num [1:1907] 0.0145 0.0144 0.029 0.0145 0.0145 ... #>  $ striated_contour          : num [1:1907] 0.974 0.981 0.677 0.978 0.98 ... #>  $ convex_contour            : num [1:1907] 0.000479 0 0.035908 0.000939 0.000416 ... #>  $ skinny_contour            : num [1:1907] 0.181 1 0.781 0.135 0.449 ... #>  $ stringy_contour           : num [1:1907] 1 1 0.886 1 1 ... #>  $ monotonic_contour         : num [1:1907] 8.16e-04 8.74e-06 1.25e-03 3.22e-01 2.81e-01 ... #>  $ num_max_ponits            : num [1:1907] 1 3 4 1 1 1 1 1 1 1 ... #>  $ num_min_points            : num [1:1907] 2 4 7 1 1 1 1 1 1 1 ... #>  $ diameter                  : num [1:1907] 1256 1228 1113 1219 1187 ... #>  $ area                      : num [1:1907] 936626 917300 855376 901303 885691 ... #>  $ perimeter                 : num [1:1907] 3831 3781 3696 3678 3834 ... #>  $ physiological_length      : num [1:1907] 1253 1218 1098 1205 1153 ... #>  $ physiological_width       : num [1:1907] 1088 1091 1083 1053 1078 ... #>  $ aspect_ratio              : num [1:1907] 0.868 0.896 0.986 0.874 0.935 ... #>  $ rectangularity            : num [1:1907] 0.687 0.69 0.719 0.71 0.713 ... #>  $ circularity               : num [1:1907] 0.802 0.806 0.787 0.837 0.757 ... #>  $ compactness               : num [1:1907] 15.7 15.6 16 15 16.6 ... #>  $ narrow_factor             : num [1:1907] 1.15 1.13 1.03 1.16 1.1 ... #>  $ perimeter_ratio_diameter  : num [1:1907] 3.05 3.08 3.32 3.02 3.23 ... #>  $ perimeter_ratio_length    : num [1:1907] 3.52 3.47 3.41 3.49 3.56 ... #>  $ perimeter_ratio_lw        : num [1:1907] 1.64 1.64 1.69 1.63 1.72 ... #>  $ num_convex_points         : num [1:1907] 125 128 114 138 125 125 121 112 115 115 ... #>  $ perimeter_convexity       : num [1:1907] 0.94 0.939 0.923 0.95 0.913 ... #>  $ area_convexity            : num [1:1907] 0.0236 0.0318 0.0393 0.0174 0.0495 ... #>  $ area_ratio_convexity      : num [1:1907] 0.977 0.969 0.962 0.983 0.953 ... #>  $ equivalent_diameter       : num [1:1907] 1092 1081 1044 1071 1062 ... #>  $ eccentriciry              : num [1:1907] 0.444 0.269 0.32 0.448 0.224 ... #>  $ contrast                  : num [1:1907] 38.7 32.7 23.2 30.1 23.8 ... #>  $ correlation_texture       : num [1:1907] 0.996 0.997 0.998 0.997 0.998 ... #>  $ inverse_difference_moments: num [1:1907] 0.595 0.602 0.636 0.614 0.622 ... #>  $ entropy                   : num [1:1907] 6.29 6.27 5.76 6.2 5.95 ... #>  $ mean_red_val              : num [1:1907] 38 34.6 30.9 33.4 33.8 ... #>  $ mean_green_val            : num [1:1907] 72.4 69.9 69.2 71.3 70.7 ... #>  $ mean_blue_val             : num [1:1907] 42.8 42.9 40.8 40.7 42.5 ... #>  $ std_red_val               : num [1:1907] 41.7 40.5 38.6 39.1 40.7 ... #>  $ std_green_val             : num [1:1907] 74.3 73.1 76.8 75.9 75.7 ... #>  $ std_blue_val              : num [1:1907] 46.4 48 48.1 46.6 48.5 ... #>  $ correlation               : num [1:1907] -0.0276 -0.0031 -0.0363 0.5684 0.5311 ..."},{"path":"https://modeldata.tidymodels.org/reference/lending_club.html","id":null,"dir":"Reference","previous_headings":"","what":"Loan data — lending_club","title":"Loan data — lending_club","text":"Loan data","code":""},{"path":"https://modeldata.tidymodels.org/reference/lending_club.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Loan data — lending_club","text":"Lending Club Statistics https://www.lendingclub.com/info/download-data.action","code":""},{"path":"https://modeldata.tidymodels.org/reference/lending_club.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loan data — lending_club","text":"lending_club data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/lending_club.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Loan data — lending_club","text":"data downloaded Lending Club access site (see ) first quarter 2016. subset rows variables included . outcome variable Class either \"good\" (meaning loan fully paid back currently -time) \"bad\" (charged , defaulted, 21-120 days late). data dictionary can found source website.","code":""},{"path":"https://modeldata.tidymodels.org/reference/lending_club.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loan data — lending_club","text":"","code":"data(lending_club) str(lending_club) #> tibble [9,857 × 23] (S3: tbl_df/tbl/data.frame) #>  $ funded_amnt               : int [1:9857] 16100 32000 10000 16800 3500 10000 11000 15000 6000 20000 ... #>  $ term                      : Factor w/ 2 levels \"term_36\",\"term_60\": 1 2 1 2 1 1 1 1 1 2 ... #>  $ int_rate                  : num [1:9857] 13.99 11.99 16.29 13.67 7.39 ... #>  $ sub_grade                 : Factor w/ 35 levels \"A1\",\"A2\",\"A3\",..: 14 11 16 13 4 10 1 7 8 12 ... #>  $ addr_state                : Factor w/ 50 levels \"AK\",\"AL\",\"AR\",..: 7 23 35 33 5 43 17 24 34 11 ... #>  $ verification_status       : Factor w/ 3 levels \"Not_Verified\",..: 1 3 2 3 2 2 1 1 2 1 ... #>  $ annual_inc                : num [1:9857] 35000 72000 72000 101000 50100 32000 65000 188000 89000 48000 ... #>  $ emp_length                : Factor w/ 12 levels \"emp_lt_1\",\"emp_1\",..: 7 3 3 1 12 1 6 8 3 3 ... #>  $ delinq_2yrs               : int [1:9857] 0 0 0 0 0 0 0 2 0 1 ... #>  $ inq_last_6mths            : int [1:9857] 0 0 2 0 0 0 0 0 2 0 ... #>  $ revol_util                : num [1:9857] 67.4 82.2 74.2 64 78.3 68.1 54.8 33.3 72.3 36 ... #>  $ acc_now_delinq            : int [1:9857] 0 0 0 0 0 0 0 0 0 0 ... #>  $ open_il_6m                : int [1:9857] 1 5 3 6 0 1 2 8 1 0 ... #>  $ open_il_12m               : int [1:9857] 0 1 2 1 0 0 0 2 0 0 ... #>  $ open_il_24m               : int [1:9857] 0 3 3 2 0 0 0 5 0 0 ... #>  $ total_bal_il              : int [1:9857] 1099 49187 33378 55445 0 7574 20998 170814 19616 0 ... #>  $ all_util                  : int [1:9857] 48 77 79 64 78 66 54 80 75 36 ... #>  $ inq_fi                    : int [1:9857] 0 0 1 1 0 0 0 0 2 1 ... #>  $ inq_last_12m              : int [1:9857] 3 0 4 4 0 0 0 4 6 1 ... #>  $ delinq_amnt               : int [1:9857] 0 0 0 0 0 0 0 0 0 0 ... #>  $ num_il_tl                 : int [1:9857] 3 9 9 10 3 9 7 21 7 1 ... #>  $ total_il_high_credit_limit: int [1:9857] 13193 65945 39387 60188 0 12131 39486 177477 26129 0 ... #>  $ Class                     : Factor w/ 2 levels \"bad\",\"good\": 2 2 2 2 2 2 2 2 2 2 ..."},{"path":"https://modeldata.tidymodels.org/reference/meats.html","id":null,"dir":"Reference","previous_headings":"","what":"Fat, water and protein content of meat samples — meats","title":"Fat, water and protein content of meat samples — meats","text":"\"data recorded Tecator Infratec Food Feed Analyzer working wavelength range 850 - 1050 nm Near Infrared Transmission (NIT) principle. sample contains finely chopped pure meat different moisture, fat protein contents.","code":""},{"path":"https://modeldata.tidymodels.org/reference/meats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fat, water and protein content of meat samples — meats","text":"meats tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/meats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fat, water and protein content of meat samples — meats","text":"results data used publication want mention instrument company name (Tecator) publication.  addition, please send preprint article : Karin Thente, Tecator AB, Box 70, S-263 21 Hoganas, Sweden data available public domain responsibility original data source. data can redistributed long permission note attached.\" \"meat sample data consists 100 channel spectrum absorbances contents moisture (water), fat protein.  absorbance -log10 transmittance measured spectrometer. three contents, measured percent, determined analytic chemistry.\" Included training, monitoring test sets.","code":""},{"path":"https://modeldata.tidymodels.org/reference/meats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fat, water and protein content of meat samples — meats","text":"","code":"data(meats) str(meats) #> tibble [215 × 103] (S3: tbl_df/tbl/data.frame) #>  $ x_001  : num [1:215] 2.62 2.83 2.58 2.82 2.79 ... #>  $ x_002  : num [1:215] 2.62 2.84 2.58 2.82 2.79 ... #>  $ x_003  : num [1:215] 2.62 2.84 2.59 2.83 2.79 ... #>  $ x_004  : num [1:215] 2.62 2.85 2.59 2.83 2.79 ... #>  $ x_005  : num [1:215] 2.62 2.85 2.59 2.83 2.8 ... #>  $ x_006  : num [1:215] 2.62 2.86 2.59 2.83 2.8 ... #>  $ x_007  : num [1:215] 2.62 2.86 2.59 2.83 2.8 ... #>  $ x_008  : num [1:215] 2.62 2.87 2.6 2.84 2.8 ... #>  $ x_009  : num [1:215] 2.63 2.87 2.6 2.84 2.81 ... #>  $ x_010  : num [1:215] 2.63 2.88 2.6 2.84 2.81 ... #>  $ x_011  : num [1:215] 2.63 2.88 2.6 2.84 2.81 ... #>  $ x_012  : num [1:215] 2.63 2.89 2.61 2.85 2.82 ... #>  $ x_013  : num [1:215] 2.64 2.9 2.61 2.85 2.82 ... #>  $ x_014  : num [1:215] 2.64 2.9 2.61 2.85 2.83 ... #>  $ x_015  : num [1:215] 2.64 2.91 2.62 2.86 2.83 ... #>  $ x_016  : num [1:215] 2.65 2.92 2.62 2.86 2.84 ... #>  $ x_017  : num [1:215] 2.65 2.93 2.62 2.86 2.85 ... #>  $ x_018  : num [1:215] 2.66 2.94 2.63 2.87 2.85 ... #>  $ x_019  : num [1:215] 2.67 2.95 2.63 2.87 2.86 ... #>  $ x_020  : num [1:215] 2.67 2.96 2.64 2.88 2.87 ... #>  $ x_021  : num [1:215] 2.68 2.97 2.64 2.88 2.88 ... #>  $ x_022  : num [1:215] 2.69 2.98 2.65 2.89 2.89 ... #>  $ x_023  : num [1:215] 2.69 3 2.65 2.89 2.9 ... #>  $ x_024  : num [1:215] 2.7 3.01 2.66 2.9 2.91 ... #>  $ x_025  : num [1:215] 2.71 3.02 2.66 2.9 2.92 ... #>  $ x_026  : num [1:215] 2.71 3.03 2.67 2.91 2.93 ... #>  $ x_027  : num [1:215] 2.72 3.04 2.67 2.92 2.94 ... #>  $ x_028  : num [1:215] 2.73 3.05 2.68 2.92 2.95 ... #>  $ x_029  : num [1:215] 2.73 3.07 2.68 2.93 2.96 ... #>  $ x_030  : num [1:215] 2.74 3.08 2.69 2.93 2.97 ... #>  $ x_031  : num [1:215] 2.75 3.1 2.69 2.94 2.99 ... #>  $ x_032  : num [1:215] 2.77 3.12 2.7 2.94 3 ... #>  $ x_033  : num [1:215] 2.78 3.14 2.71 2.95 3.02 ... #>  $ x_034  : num [1:215] 2.79 3.16 2.71 2.95 3.03 ... #>  $ x_035  : num [1:215] 2.8 3.18 2.72 2.96 3.05 ... #>  $ x_036  : num [1:215] 2.81 3.2 2.72 2.96 3.06 ... #>  $ x_037  : num [1:215] 2.83 3.22 2.73 2.97 3.08 ... #>  $ x_038  : num [1:215] 2.84 3.24 2.74 2.98 3.1 ... #>  $ x_039  : num [1:215] 2.86 3.26 2.75 2.99 3.12 ... #>  $ x_040  : num [1:215] 2.88 3.28 2.77 3 3.14 ... #>  $ x_041  : num [1:215] 2.89 3.29 2.78 3.02 3.17 ... #>  $ x_042  : num [1:215] 2.91 3.3 2.79 3.03 3.18 ... #>  $ x_043  : num [1:215] 2.92 3.31 2.81 3.05 3.2 ... #>  $ x_044  : num [1:215] 2.93 3.3 2.82 3.06 3.21 ... #>  $ x_045  : num [1:215] 2.94 3.3 2.84 3.08 3.23 ... #>  $ x_046  : num [1:215] 2.95 3.29 2.85 3.1 3.24 ... #>  $ x_047  : num [1:215] 2.96 3.28 2.87 3.12 3.25 ... #>  $ x_048  : num [1:215] 2.98 3.29 2.89 3.14 3.26 ... #>  $ x_049  : num [1:215] 3 3.29 2.91 3.16 3.28 ... #>  $ x_050  : num [1:215] 3.04 3.31 2.94 3.19 3.31 ... #>  $ x_051  : num [1:215] 3.07 3.33 2.97 3.22 3.35 ... #>  $ x_052  : num [1:215] 3.12 3.36 3.01 3.26 3.39 ... #>  $ x_053  : num [1:215] 3.17 3.4 3.05 3.3 3.44 ... #>  $ x_054  : num [1:215] 3.22 3.43 3.09 3.35 3.5 ... #>  $ x_055  : num [1:215] 3.26 3.46 3.12 3.39 3.55 ... #>  $ x_056  : num [1:215] 3.3 3.49 3.15 3.43 3.61 ... #>  $ x_057  : num [1:215] 3.33 3.51 3.17 3.46 3.65 ... #>  $ x_058  : num [1:215] 3.35 3.53 3.18 3.48 3.68 ... #>  $ x_059  : num [1:215] 3.36 3.54 3.19 3.5 3.7 ... #>  $ x_060  : num [1:215] 3.37 3.55 3.19 3.51 3.72 ... #>  $ x_061  : num [1:215] 3.38 3.55 3.19 3.51 3.73 ... #>  $ x_062  : num [1:215] 3.39 3.56 3.19 3.51 3.74 ... #>  $ x_063  : num [1:215] 3.39 3.56 3.18 3.51 3.74 ... #>  $ x_064  : num [1:215] 3.39 3.56 3.18 3.51 3.74 ... #>  $ x_065  : num [1:215] 3.39 3.56 3.17 3.51 3.74 ... #>  $ x_066  : num [1:215] 3.39 3.56 3.17 3.5 3.74 ... #>  $ x_067  : num [1:215] 3.39 3.56 3.16 3.49 3.74 ... #>  $ x_068  : num [1:215] 3.39 3.55 3.15 3.48 3.73 ... #>  $ x_069  : num [1:215] 3.38 3.55 3.13 3.47 3.73 ... #>  $ x_070  : num [1:215] 3.37 3.54 3.12 3.46 3.72 ... #>  $ x_071  : num [1:215] 3.36 3.53 3.1 3.45 3.71 ... #>  $ x_072  : num [1:215] 3.35 3.52 3.09 3.43 3.69 ... #>  $ x_073  : num [1:215] 3.34 3.52 3.07 3.41 3.68 ... #>  $ x_074  : num [1:215] 3.32 3.51 3.05 3.39 3.66 ... #>  $ x_075  : num [1:215] 3.31 3.5 3.03 3.38 3.65 ... #>  $ x_076  : num [1:215] 3.29 3.49 3.02 3.35 3.63 ... #>  $ x_077  : num [1:215] 3.28 3.48 3 3.33 3.61 ... #>  $ x_078  : num [1:215] 3.26 3.47 2.98 3.31 3.59 ... #>  $ x_079  : num [1:215] 3.25 3.46 2.96 3.29 3.58 ... #>  $ x_080  : num [1:215] 3.23 3.44 2.94 3.27 3.56 ... #>  $ x_081  : num [1:215] 3.21 3.43 2.92 3.24 3.54 ... #>  $ x_082  : num [1:215] 3.19 3.42 2.9 3.22 3.52 ... #>  $ x_083  : num [1:215] 3.17 3.41 2.88 3.2 3.5 ... #>  $ x_084  : num [1:215] 3.16 3.4 2.86 3.17 3.48 ... #>  $ x_085  : num [1:215] 3.13 3.39 2.83 3.15 3.46 ... #>  $ x_086  : num [1:215] 3.11 3.38 2.81 3.12 3.44 ... #>  $ x_087  : num [1:215] 3.09 3.36 2.79 3.1 3.41 ... #>  $ x_088  : num [1:215] 3.07 3.35 2.77 3.07 3.39 ... #>  $ x_089  : num [1:215] 3.05 3.33 2.75 3.05 3.37 ... #>  $ x_090  : num [1:215] 3.02 3.32 2.73 3.02 3.34 ... #>  $ x_091  : num [1:215] 3 3.3 2.71 3 3.32 ... #>  $ x_092  : num [1:215] 2.98 3.29 2.69 2.97 3.3 ... #>  $ x_093  : num [1:215] 2.96 3.28 2.67 2.95 3.28 ... #>  $ x_094  : num [1:215] 2.94 3.27 2.65 2.93 3.26 ... #>  $ x_095  : num [1:215] 2.92 3.25 2.63 2.9 3.24 ... #>  $ x_096  : num [1:215] 2.9 3.24 2.61 2.88 3.22 ... #>  $ x_097  : num [1:215] 2.88 3.23 2.6 2.86 3.2 ... #>  $ x_098  : num [1:215] 2.86 3.21 2.58 2.84 3.18 ... #>  $ x_099  : num [1:215] 2.84 3.2 2.56 2.82 3.16 ... #>   [list output truncated]"},{"path":"https://modeldata.tidymodels.org/reference/mlc_churn.html","id":null,"dir":"Reference","previous_headings":"","what":"Customer churn data — mlc_churn","title":"Customer churn data — mlc_churn","text":"data set MLC++ machine learning software modeling customer churn. 19 predictors, mostly numeric: state (categorical), account_length area_code international_plan (yes/), voice_mail_plan (yes/), number_vmail_messages total_day_minutes total_day_calls total_day_charge total_eve_minutes total_eve_calls total_eve_charge total_night_minutes total_night_calls total_night_charge total_intl_minutes total_intl_calls total_intl_charge, number_customer_service_calls.","code":""},{"path":"https://modeldata.tidymodels.org/reference/mlc_churn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Customer churn data — mlc_churn","text":"Originally http://www.sgi.com/tech/mlc/","code":""},{"path":"https://modeldata.tidymodels.org/reference/mlc_churn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customer churn data — mlc_churn","text":"mlc_churn tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/mlc_churn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customer churn data — mlc_churn","text":"outcome contained column called churn (also yes/). note one source files states data \"artificial based claims similar real world\".","code":""},{"path":"https://modeldata.tidymodels.org/reference/mlc_churn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customer churn data — mlc_churn","text":"","code":"data(mlc_churn) str(mlc_churn) #> tibble [5,000 × 20] (S3: tbl_df/tbl/data.frame) #>  $ state                        : Factor w/ 51 levels \"AK\",\"AL\",\"AR\",..: 17 36 32 36 37 2 20 25 19 50 ... #>  $ account_length               : int [1:5000] 128 107 137 84 75 118 121 147 117 141 ... #>  $ area_code                    : Factor w/ 3 levels \"area_code_408\",..: 2 2 2 1 2 3 3 2 1 2 ... #>  $ international_plan           : Factor w/ 2 levels \"no\",\"yes\": 1 1 1 2 2 2 1 2 1 2 ... #>  $ voice_mail_plan              : Factor w/ 2 levels \"no\",\"yes\": 2 2 1 1 1 1 2 1 1 2 ... #>  $ number_vmail_messages        : int [1:5000] 25 26 0 0 0 0 24 0 0 37 ... #>  $ total_day_minutes            : num [1:5000] 265 162 243 299 167 ... #>  $ total_day_calls              : int [1:5000] 110 123 114 71 113 98 88 79 97 84 ... #>  $ total_day_charge             : num [1:5000] 45.1 27.5 41.4 50.9 28.3 ... #>  $ total_eve_minutes            : num [1:5000] 197.4 195.5 121.2 61.9 148.3 ... #>  $ total_eve_calls              : int [1:5000] 99 103 110 88 122 101 108 94 80 111 ... #>  $ total_eve_charge             : num [1:5000] 16.78 16.62 10.3 5.26 12.61 ... #>  $ total_night_minutes          : num [1:5000] 245 254 163 197 187 ... #>  $ total_night_calls            : int [1:5000] 91 103 104 89 121 118 118 96 90 97 ... #>  $ total_night_charge           : num [1:5000] 11.01 11.45 7.32 8.86 8.41 ... #>  $ total_intl_minutes           : num [1:5000] 10 13.7 12.2 6.6 10.1 6.3 7.5 7.1 8.7 11.2 ... #>  $ total_intl_calls             : int [1:5000] 3 3 5 7 3 6 7 6 4 5 ... #>  $ total_intl_charge            : num [1:5000] 2.7 3.7 3.29 1.78 2.73 1.7 2.03 1.92 2.35 3.02 ... #>  $ number_customer_service_calls: int [1:5000] 1 1 0 2 3 0 3 0 1 0 ... #>  $ churn                        : Factor w/ 2 levels \"yes\",\"no\": 2 2 2 2 2 2 2 2 2 2 ..."},{"path":"https://modeldata.tidymodels.org/reference/modeldata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"modeldata: Data Sets Useful for Modeling Examples — modeldata-package","title":"modeldata: Data Sets Useful for Modeling Examples — modeldata-package","text":"Data sets used demonstrating testing model-related packages contained package.","code":""},{"path":[]},{"path":"https://modeldata.tidymodels.org/reference/modeldata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"modeldata: Data Sets Useful for Modeling Examples — modeldata-package","text":"Maintainer: Max Kuhn max@posit.co contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://modeldata.tidymodels.org/reference/oils.html","id":null,"dir":"Reference","previous_headings":"","what":"Fatty acid composition of commercial oils — oils","title":"Fatty acid composition of commercial oils — oils","text":"Fatty acid concentrations commercial oils measured using gas chromatography.  data used predict type oil.  Note known oils data set. Also, authors state 95 samples known oils. However, count 96 Table 1 (pgs.  33-35).","code":""},{"path":"https://modeldata.tidymodels.org/reference/oils.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fatty acid composition of commercial oils — oils","text":"Brodnjak-Voncina et al. (2005). Multivariate data analysis classification vegetable oils characterized content fatty acids, Chemometrics Intelligent Laboratory Systems, Vol. 75:31-45.","code":""},{"path":"https://modeldata.tidymodels.org/reference/oils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fatty acid composition of commercial oils — oils","text":"oils tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/oils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fatty acid composition of commercial oils — oils","text":"","code":"data(oils) str(oils) #> tibble [96 × 8] (S3: tbl_df/tbl/data.frame) #>  $ palmitic  : num [1:96] 9.7 11.1 11.5 10 12.2 9.8 10.5 10.5 11.5 10 ... #>  $ stearic   : num [1:96] 5.2 5 5.2 4.8 5 4.2 5 5 5.2 4.8 ... #>  $ oleic     : num [1:96] 31 32.9 35 30.4 31.1 43 31.8 31.8 35 30.4 ... #>  $ linoleic  : num [1:96] 52.7 49.8 47.2 53.5 50.5 39.2 51.3 51.3 47.2 53.5 ... #>  $ linolenic : num [1:96] 0.4 0.3 0.2 0.3 0.3 2.4 0.4 0.4 0.2 0.3 ... #>  $ eicosanoic: num [1:96] 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4 ... #>  $ eicosenoic: num [1:96] 0.1 0.1 0.1 0.1 0.1 0.5 0.1 0.1 0.1 0.1 ... #>  $ class     : Factor w/ 7 levels \"corn\",\"olive\",..: 4 4 4 4 4 4 4 4 4 4 ..."},{"path":"https://modeldata.tidymodels.org/reference/parabolic.html","id":null,"dir":"Reference","previous_headings":"","what":"Parabolic class boundary data — parabolic","title":"Parabolic class boundary data — parabolic","text":"Parabolic class boundary data","code":""},{"path":"https://modeldata.tidymodels.org/reference/parabolic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parabolic class boundary data — parabolic","text":"parabolic data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/parabolic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parabolic class boundary data — parabolic","text":"data simulated. two correlated predictors two classes factor outcome.","code":""},{"path":"https://modeldata.tidymodels.org/reference/parabolic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parabolic class boundary data — parabolic","text":"","code":"data(parabolic) str(parabolic) #> tibble [500 × 3] (S3: tbl_df/tbl/data.frame) #>  $ X1   : num [1:500] 3.29 1.47 1.66 1.6 2.17 ... #>  $ X2   : num [1:500] 1.661 0.414 0.791 0.276 3.166 ... #>  $ class: Factor w/ 2 levels \"Class1\",\"Class2\": 1 2 2 2 1 1 2 1 2 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/pathology.html","id":null,"dir":"Reference","previous_headings":"","what":"Liver pathology data — pathology","title":"Liver pathology data — pathology","text":"Liver pathology data","code":""},{"path":"https://modeldata.tidymodels.org/reference/pathology.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Liver pathology data — pathology","text":"Altman, D.G., Bland, J.M. (1994) ``Diagnostic tests 1: sensitivity specificity,'' British Medical Journal, vol 308, 1552.","code":""},{"path":"https://modeldata.tidymodels.org/reference/pathology.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Liver pathology data — pathology","text":"pathology data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/pathology.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Liver pathology data — pathology","text":"data results x-ray examination determine whether liver abnormal (scan column) versus extensive pathology results approximate truth (pathology).","code":""},{"path":"https://modeldata.tidymodels.org/reference/pathology.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Liver pathology data — pathology","text":"","code":"data(pathology) str(pathology) #> 'data.frame':\t344 obs. of  2 variables: #>  $ pathology: Factor w/ 2 levels \"abnorm\",\"norm\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ scan     : Factor w/ 2 levels \"abnorm\",\"norm\": 1 1 1 1 1 1 1 1 1 1 ..."},{"path":"https://modeldata.tidymodels.org/reference/pd_speech.html","id":null,"dir":"Reference","previous_headings":"","what":"Parkinson's disease speech classification data set — pd_speech","title":"Parkinson's disease speech classification data set — pd_speech","text":"Parkinson's disease speech classification data set","code":""},{"path":"https://modeldata.tidymodels.org/reference/pd_speech.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Parkinson's disease speech classification data set — pd_speech","text":"UCI ML repository (data) https://archive.ics.uci.edu/ml/datasets/Parkinson%27s+Disease+Classification#, Sakar et al (2019), \"comparative analysis speech signal processing algorithms Parkinson’s disease classification use tunable Q-factor wavelet transform\", Applied Soft Computing, V74, pg 255-263.","code":""},{"path":"https://modeldata.tidymodels.org/reference/pd_speech.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parkinson's disease speech classification data set — pd_speech","text":"pd_speech data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/pd_speech.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parkinson's disease speech classification data set — pd_speech","text":"UCI ML archive, description \"data used study gathered 188 patients PD (107 men 81 women) ages ranging 33 87 (65.1 p/m 10.9) Department Neurology Cerrahpaşa Faculty Medicine, Istanbul University. control group consists 64 healthy individuals (23 men 41 women) ages varying 41 82 (61.1 p/m 8.9). data collection process, microphone set 44.1 KHz following physician's examination, sustained phonation vowel // collected subject three repetitions.\" data averaged replicates.","code":""},{"path":"https://modeldata.tidymodels.org/reference/pd_speech.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parkinson's disease speech classification data set — pd_speech","text":"","code":"data(pd_speech) str(pd_speech) #> tibble [252 × 752] (S3: tbl_df/tbl/data.frame) #>  $ gender                        : num [1:252] 1 0 1 0 0 1 1 1 1 1 ... #>  $ PPE                           : num [1:252] 0.823 0.416 0.802 0.829 0.831 ... #>  $ DFA                           : num [1:252] 0.696 0.794 0.62 0.626 0.779 ... #>  $ RPDE                          : num [1:252] 0.567 0.592 0.521 0.537 0.727 ... #>  $ meanPeriodPulses              : num [1:252] 0.00822 0.00888 0.00604 0.00391 0.00562 ... #>  $ stdDevPeriodPulses            : num [1:252] 7.34e-05 1.85e-03 1.04e-04 4.21e-05 2.02e-03 ... #>  $ locPctJitter                  : num [1:252] 0.001963 0.00579 0.002217 0.000757 0.003593 ... #>  $ locAbsJitter                  : num [1:252] 1.61e-05 4.96e-05 1.34e-05 2.97e-06 2.10e-05 ... #>  $ rapJitter                     : num [1:252] 5.87e-04 1.82e-03 3.23e-04 8.67e-05 1.10e-03 ... #>  $ ppq5Jitter                    : num [1:252] 0.001173 0.00269 0.000833 0.00024 0.002057 ... #>  $ ddpJitter                     : num [1:252] 0.00176 0.005473 0.000973 0.00026 0.00329 ... #>  $ locShimmer                    : num [1:252] 0.071 0.0627 0.041 0.0495 0.1592 ... #>  $ locDbShimmer                  : num [1:252] 0.639 0.567 0.354 0.457 1.454 ... #>  $ apq3Shimmer                   : num [1:252] 0.0348 0.0304 0.0196 0.0257 0.0773 ... #>  $ apq5Shimmer                   : num [1:252] 0.0456 0.0365 0.0261 0.0275 0.1084 ... #>  $ apq11Shimmer                  : num [1:252] 0.0626 0.054 0.0414 0.0443 0.1654 ... #>  $ ddaShimmer                    : num [1:252] 0.1043 0.0911 0.0588 0.0772 0.232 ... #>  $ meanAutoCorrHarmonicity       : num [1:252] 0.977 0.95 0.988 0.992 0.896 ... #>  $ meanNoiseToHarmHarmonicity    : num [1:252] 0.02684 0.06874 0.01202 0.00851 0.12841 ... #>  $ meanHarmToNoiseHarmonicity    : num [1:252] 19.4 18 20.4 23.5 10.8 ... #>  $ minIntensity                  : num [1:252] 66.7 75.7 75.1 70.9 57.4 ... #>  $ maxIntensity                  : num [1:252] 73.6 80.9 78.4 78.9 65.4 ... #>  $ meanIntensity                 : num [1:252] 70.7 79 77 75.6 62.4 ... #>  $ f1                            : num [1:252] 551 833 683 712 504 ... #>  $ f2                            : num [1:252] 1027 1203 1153 1273 1221 ... #>  $ f3                            : num [1:252] 2396 3178 2979 2057 2071 ... #>  $ f4                            : num [1:252] 3611 4000 3868 3203 3235 ... #>  $ b1                            : num [1:252] 107 293 123 106 652 ... #>  $ b2                            : num [1:252] 74.8 208.3 85.5 79.3 683.6 ... #>  $ b3                            : num [1:252] 218 323 169 2519 715 ... #>  $ b4                            : num [1:252] 233 525 516 325 561 ... #>  $ GQ_prc5_95                    : num [1:252] 0.803 0.898 1 1 0.914 ... #>  $ GQ_std_cycle_open             : num [1:252] 17.49 115.31 9.05 9.81 87.72 ... #>  $ GQ_std_cycle_closed           : num [1:252] 2.81 18.22 0 0 10.76 ... #>  $ GNE_mean                      : num [1:252] 1.015 0.841 0.834 1.631 0.841 ... #>  $ GNE_std                       : num [1:252] 0.2142 0.1876 0.0799 0.3902 0.1455 ... #>  $ GNE_SNR_TKEO                  : num [1:252] 0.1091 0.1477 0.1553 0.0672 0.1702 ... #>  $ GNE_SNR_SEO                   : num [1:252] 1257257 1851946 1438735 1440965 1532406 ... #>  $ GNE_NSR_TKEO                  : num [1:252] 1.59 1.67 1.65 1.47 1.69 ... #>  $ GNE_NSR_SEO                   : num [1:252] 3.04 3.03 3.02 3.08 3.06 ... #>  $ VFER_mean                     : num [1:252] 0.000479 0.000253 0.001704 0.003726 0.001358 ... #>  $ VFER_std                      : num [1:252] 0.000274 0.000218 0.000507 0.001731 0.003217 ... #>  $ VFER_entropy                  : num [1:252] 0.839 0.61 3.451 10.038 3.071 ... #>  $ VFER_SNR_TKEO                 : num [1:252] 230.4 60.3 51.1 99.4 101.7 ... #>  $ VFER_SNR_SEO                  : num [1:252] 407.4 141.9 392 397.5 98.5 ... #>  $ VFER_NSR_TKEO                 : num [1:252] 1.28 1.23 1.23 1.32 1.25 ... #>  $ VFER_NSR_SEO                  : num [1:252] 1.32 1.29 1.35 1.37 1.21 ... #>  $ IMF_SNR_SEO                   : num [1:252] 45.251 82.136 13.799 0.417 39.002 ... #>  $ IMF_SNR_TKEO                  : num [1:252] 7.9692 5.1628 1.5484 0.0901 1.3481 ... #>  $ IMF_SNR_entropy               : num [1:252] 28.959 31.376 6.983 0.853 12.213 ... #>  $ IMF_NSR_SEO                   : num [1:252] 0.256 0.272 0.125 0.137 0.211 ... #>  $ IMF_NSR_TKEO                  : num [1:252] 5.63 5.58 10.92 35.8 8.75 ... #>  $ IMF_NSR_entropy               : num [1:252] 0.192 0.198 0.135 0.137 0.182 ... #>  $ mean_Log_energy               : num [1:252] 9.28 9.93 9.89 9.67 9.37 ... #>  $ mean_MFCC_0th_coef            : num [1:252] 11.7 14.1 16.6 12.3 14.7 ... #>  $ mean_MFCC_1st_coef            : num [1:252] 8.21 6.64 6.09 6.74 4.43 ... #>  $ mean_MFCC_2nd_coef            : num [1:252] 2.869 2.909 -0.432 0.498 3.326 ... #>  $ mean_MFCC_3rd_coef            : num [1:252] -0.309 0.836 1.041 -2.216 -1.87 ... #>  $ mean_MFCC_4th_coef            : num [1:252] 0.435 -1.689 -1.882 -1.762 -1.952 ... #>  $ mean_MFCC_5th_coef            : num [1:252] -1.57 -0.969 -2.724 -1.215 0.392 ... #>  $ mean_MFCC_6th_coef            : num [1:252] -1.56 -0.6 -1.14 -2.25 -1.29 ... #>  $ mean_MFCC_7th_coef            : num [1:252] 0.4265 0.8811 0.8524 0.3172 -0.0881 ... #>  $ mean_MFCC_8th_coef            : num [1:252] 0.6196 1.5336 0.0925 1.323 0.6159 ... #>  $ mean_MFCC_9th_coef            : num [1:252] 0.1647 -0.0641 0.9851 -1.2218 -1.1646 ... #>  $ mean_MFCC_10th_coef           : num [1:252] 0.63 -1.047 -0.613 -0.937 -0.687 ... #>  $ mean_MFCC_11th_coef           : num [1:252] 0.113 -0.872 -1.08 -0.478 -1.556 ... #>  $ mean_MFCC_12th_coef           : num [1:252] -0.5713 0.0172 0.4279 -0.0895 -0.7913 ... #>  $ mean_delta_log_energy         : num [1:252] -5.91e-04 1.53e-03 8.03e-05 -3.50e-03 -6.45e-03 ... #>  $ mean_0th_delta                : num [1:252] -0.003648 -0.006824 0.000593 -0.010634 -0.00694 ... #>  $ mean_1st_delta                : num [1:252] -0.00115 -0.00172 -0.00221 0.00256 -0.00728 ... #>  $ mean_2nd_delta                : num [1:252] 0.00338 0.00645 0.00438 0.00388 0.00233 ... #>  $ mean_3rd_delta                : num [1:252] -2.89e-04 5.94e-04 1.10e-04 -2.17e-06 1.25e-03 ... #>  $ mean_4th_delta                : num [1:252] -0.0005 -0.001445 -0.000689 0.001075 -0.003117 ... #>  $ mean_5th_delta                : num [1:252] -0.000543 0.001018 -0.001211 -0.000138 0.00282 ... #>  $ mean_6th_delta                : num [1:252] 6.86e-04 1.95e-03 6.32e-04 -1.31e-03 9.87e-06 ... #>  $ mean_7th_delta                : num [1:252] 0.000618 -0.002802 -0.000874 0.000407 -0.000266 ... #>  $ mean_8th_delta                : num [1:252] 0.000673 -0.002118 0.000747 -0.000263 0.002366 ... #>  $ mean_9th_delta                : num [1:252] -0.000494 0.002002 0.00111 0.00213 -0.000315 ... #>  $ mean_10th_delta               : num [1:252] -0.000101 -0.001611 -0.000585 0.002704 0.001459 ... #>  $ mean_11th_delta               : num [1:252] 0.00132 -0.001233 0.000134 -0.000799 0.00243 ... #>  $ mean_12th_delta               : num [1:252] 0.000282 -0.001075 0.00133 -0.00005 -0.001658 ... #>  $ mean_delta_delta_log_energy   : num [1:252] 2.19e-04 -8.21e-05 -5.44e-06 1.66e-04 -1.43e-04 ... #>  $ mean_delta_delta_0th          : num [1:252] -2.61e-04 -2.09e-04 -1.64e-05 -1.29e-04 -3.83e-04 ... #>  $ mean_1st_delta_delta          : num [1:252] 4.07e-04 -2.73e-04 1.75e-04 -1.55e-04 -3.27e-05 ... #>  $ mean_2nd_delta_delta          : num [1:252] 0.00047 0.000106 -0.000545 -0.000154 0.000322 ... #>  $ mean_3rd_delta_delta          : num [1:252] -4.51e-04 1.29e-04 4.82e-05 9.82e-05 2.42e-04 ... #>  $ mean_4th_delta_delta          : num [1:252] -2.43e-04 1.65e-04 1.93e-04 -2.55e-04 6.73e-05 ... #>  $ mean_5th_delta_delta          : num [1:252] 7.08e-05 -5.77e-05 -1.57e-04 -8.74e-05 1.97e-04 ... #>  $ mean_6th_delta_delta          : num [1:252] -4.08e-04 -1.01e-04 -2.64e-04 -3.72e-05 2.54e-04 ... #>  $ mean_7th_delta_delta          : num [1:252] -2.83e-04 1.58e-04 2.79e-04 7.31e-05 1.95e-05 ... #>  $ mean_8th_delta_delta          : num [1:252] 1.07e-04 9.06e-05 -1.48e-04 9.80e-05 2.36e-04 ... #>  $ mean_9th_delta_delta          : num [1:252] 1.88e-04 1.59e-04 5.00e-05 2.45e-05 2.24e-04 ... #>  $ mean_10th_delta_delta         : num [1:252] -4.26e-05 2.73e-04 -1.03e-04 -2.02e-04 3.81e-04 ... #>  $ mean_11th_delta_delta         : num [1:252] 1.49e-04 6.84e-05 -8.47e-05 -2.46e-04 4.69e-05 ... #>  $ mean_12th_delta_delta         : num [1:252] -1.27e-04 -8.65e-05 2.30e-05 -2.36e-04 -5.54e-05 ... #>  $ std_Log_energy                : num [1:252] 0.366 0.243 0.156 0.407 0.432 ... #>  $ std_MFCC_0th_coef             : num [1:252] 0.956 1.018 0.618 1.137 0.698 ... #>  $ std_MFCC_1st_coef             : num [1:252] 0.575 0.584 0.403 0.485 0.48 ... #>  $ std_MFCC_2nd_coef             : num [1:252] 0.723 0.558 0.389 0.463 0.476 ... #>   [list output truncated]"},{"path":"https://modeldata.tidymodels.org/reference/penguins.html","id":null,"dir":"Reference","previous_headings":"","what":"Palmer Station penguin data — penguins","title":"Palmer Station penguin data — penguins","text":"data set Gorman, Williams, Fraser (2014) containing measurements different types penguins. version data retrieved Allison Horst's palmerpenguins package 2020-06-22.","code":""},{"path":"https://modeldata.tidymodels.org/reference/penguins.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Palmer Station penguin data — penguins","text":"Gorman KB, Williams TD, Fraser WR (2014) Ecological Sexual Dimorphism Environmental Variability within Community Antarctic Penguins (Genus Pygoscelis). PLoS ONE 9(3): e90081. doi:10.1371/journal.pone.0090081 https://github.com/allisonhorst/palmerpenguins","code":""},{"path":"https://modeldata.tidymodels.org/reference/penguins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Palmer Station penguin data — penguins","text":"penguins tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/penguins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palmer Station penguin data — penguins","text":"","code":"data(penguins) str(penguins) #> tibble [344 × 7] (S3: tbl_df/tbl/data.frame) #>  $ species          : Factor w/ 3 levels \"Adelie\",\"Chinstrap\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ island           : Factor w/ 3 levels \"Biscoe\",\"Dream\",..: 3 3 3 3 3 3 3 3 3 3 ... #>  $ bill_length_mm   : num [1:344] 39.1 39.5 40.3 NA 36.7 39.3 38.9 39.2 34.1 42 ... #>  $ bill_depth_mm    : num [1:344] 18.7 17.4 18 NA 19.3 20.6 17.8 19.6 18.1 20.2 ... #>  $ flipper_length_mm: int [1:344] 181 186 195 NA 193 190 181 195 193 190 ... #>  $ body_mass_g      : int [1:344] 3750 3800 3250 NA 3450 3650 3625 4675 3475 4250 ... #>  $ sex              : Factor w/ 2 levels \"female\",\"male\": 2 1 1 NA 1 2 1 2 NA NA ..."},{"path":"https://modeldata.tidymodels.org/reference/permeability_qsar.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting permeability from chemical information — permeability_qsar","title":"Predicting permeability from chemical information — permeability_qsar","text":"quantitative structure-activity relationship (QSAR) data set predict molecule can permeate cells.","code":""},{"path":"https://modeldata.tidymodels.org/reference/permeability_qsar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicting permeability from chemical information — permeability_qsar","text":"Kuhn, Max, Kjell Johnson. Applied predictive modeling. New York: Springer, 2013.","code":""},{"path":"https://modeldata.tidymodels.org/reference/permeability_qsar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicting permeability from chemical information — permeability_qsar","text":"permeability_qsar data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/permeability_qsar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicting permeability from chemical information — permeability_qsar","text":"pharmaceutical data set used develop model predicting compounds' permeability. short, permeability measure molecule's ability cross membrane. body, example, notable membranes body brain, known blood-brain barrier, gut body intestines. membranes help body guard critical regions receiving undesirable detrimental substances. orally taken drug effective brain, first must pass intestinal wall must pass blood-brain barrier order present desired neurological target. Therefore, compound's ability permeate relevant biological membranes critically important understand early drug discovery process. Compounds appear effective particular disease research screening experiments, appear poorly permeable may need altered order improve permeability, thus compound's ability reach desired target. Identifying permeability problems can help guide chemists towards better molecules. Permeability assays PAMPA Caco-2 developed help measure compounds' permeability (Kansy et al, 1998). screens effective quantifying compound's permeability, assay expensive labor intensive. Given sufficient number compounds screened, develop predictive model permeability attempt potentially reduce need assay. project 165 unique compounds; 1107 molecular fingerprints determined . molecular fingerprint binary sequence numbers represents presence absence specific molecular sub-structure. response highly skewed, predictors sparse (15.5% present), many predictors strongly associated. Columns: permeability: numeric chem_fp_0001 - chem_fp_1107: numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/permeability_qsar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicting permeability from chemical information — permeability_qsar","text":"","code":"data(permeability_qsar) str(permeability_qsar) #> tibble [165 × 1,108] (S3: tbl_df/tbl/data.frame) #>  $ permeability: Named num [1:165] 12.52 1.12 19.41 1.73 1.68 ... #>   ..- attr(*, \"names\")= chr [1:165] \"1\" \"2\" \"3\" \"4\" ... #>  $ chem_fp_0001: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0002: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0003: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0004: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0005: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0006: num [1:165] 1 0 1 0 0 0 1 0 1 0 ... #>  $ chem_fp_0007: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0008: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0009: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0010: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0011: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0012: num [1:165] 1 1 0 1 1 1 0 0 0 1 ... #>  $ chem_fp_0013: num [1:165] 0 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0014: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0015: num [1:165] 0 0 0 0 0 0 0 0 1 0 ... #>  $ chem_fp_0016: num [1:165] 0 0 0 0 0 0 1 0 1 0 ... #>  $ chem_fp_0017: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0018: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0019: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0020: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0021: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0022: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0023: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0024: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0025: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0026: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0027: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0028: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0029: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0030: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0031: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0032: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0033: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0034: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0035: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0036: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0037: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0038: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0039: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0040: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0041: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0042: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0043: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0044: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0045: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0046: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0047: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0048: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0049: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0050: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0051: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0052: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0053: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0054: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0055: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0056: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0057: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0058: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0059: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0060: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0061: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0062: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0063: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0064: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0065: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0066: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0067: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0068: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0069: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0070: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0071: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0072: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0073: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0074: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0075: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0076: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0077: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0078: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0079: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0080: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0081: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0082: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0083: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0084: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0085: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0086: num [1:165] 1 1 1 1 1 1 0 0 0 1 ... #>  $ chem_fp_0087: num [1:165] 1 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0088: num [1:165] 1 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0089: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0090: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0091: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0092: num [1:165] 1 1 1 1 1 1 1 1 1 1 ... #>  $ chem_fp_0093: num [1:165] 0 0 0 0 0 0 0 1 1 0 ... #>  $ chem_fp_0094: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0095: num [1:165] 0 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0096: num [1:165] 1 1 1 1 1 1 0 0 0 1 ... #>  $ chem_fp_0097: num [1:165] 1 0 0 0 0 0 0 0 0 0 ... #>  $ chem_fp_0098: num [1:165] 1 0 0 0 0 0 0 0 0 0 ... #>   [list output truncated]"},{"path":"https://modeldata.tidymodels.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%","code":""},{"path":"https://modeldata.tidymodels.org/reference/scat.html","id":null,"dir":"Reference","previous_headings":"","what":"Morphometric data on scat — scat","title":"Morphometric data on scat — scat","text":"Reid (2015) collected data animal feses coastal California. data consist DNA verified species designations well fields related time place collection scat . data three main species.","code":""},{"path":"https://modeldata.tidymodels.org/reference/scat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Morphometric data on scat — scat","text":"Reid, R. E. B. (2015). morphometric modeling approach distinguishing among bobcat, coyote gray fox scats. Wildlife Biology, 21(5), 254-262","code":""},{"path":"https://modeldata.tidymodels.org/reference/scat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Morphometric data on scat — scat","text":"scat tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/scat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Morphometric data on scat — scat","text":"","code":"data(scat) str(scat) #> tibble [110 × 19] (S3: tbl_df/tbl/data.frame) #>  $ Species  : Factor w/ 3 levels \"bobcat\",\"coyote\",..: 2 2 1 2 2 2 1 1 1 1 ... #>  $ Month    : Factor w/ 9 levels \"April\",\"August\",..: 4 4 4 4 4 4 4 4 4 4 ... #>  $ Year     : int [1:110] 2012 2012 2012 2012 2012 2012 2012 2012 2012 2012 ... #>  $ Site     : Factor w/ 2 levels \"ANNU\",\"YOLA\": 2 2 2 2 2 2 1 1 1 1 ... #>  $ Location : Factor w/ 3 levels \"edge\",\"middle\",..: 1 1 2 2 1 1 3 3 3 2 ... #>  $ Age      : int [1:110] 5 3 3 5 5 5 1 3 5 5 ... #>  $ Number   : int [1:110] 2 2 2 2 4 3 5 7 2 1 ... #>  $ Length   : num [1:110] 9.5 14 9 8.5 8 9 6 5.5 11 20.5 ... #>  $ Diameter : num [1:110] 25.7 25.4 18.8 18.1 20.7 21.2 15.7 21.9 17.5 18 ... #>  $ Taper    : num [1:110] 41.9 37.1 16.5 24.7 20.1 28.5 8.2 19.3 29.1 21.4 ... #>  $ TI       : num [1:110] 1.63 1.46 0.88 1.36 0.97 1.34 0.52 0.88 1.66 1.19 ... #>  $ Mass     : num [1:110] 15.9 17.6 8.4 7.4 25.4 ... #>  $ d13C     : num [1:110] -26.9 -29.6 -28.7 -20.1 -23.2 ... #>  $ d15N     : num [1:110] 6.94 9.87 8.52 5.79 7.01 8.28 4.2 3.89 7.34 6.06 ... #>  $ CN       : num [1:110] 8.5 11.3 8.1 11.5 10.6 9 5.4 5.6 5.8 7.7 ... #>  $ ropey    : int [1:110] 0 0 1 1 0 1 1 0 0 1 ... #>  $ segmented: int [1:110] 0 0 1 0 1 0 1 1 1 1 ... #>  $ flat     : int [1:110] 0 0 0 0 0 0 0 0 0 0 ... #>  $ scrape   : int [1:110] 0 0 1 0 0 0 1 0 0 0 ..."},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate datasets — sim_classification","title":"Simulate datasets — sim_classification","text":"functions can used generate simulated data supervised (classification regression) unsupervised modeling applications.","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate datasets — sim_classification","text":"","code":"sim_classification(   num_samples = 100,   method = \"caret\",   intercept = -5,   num_linear = 10,   keep_truth = FALSE )  sim_regression(   num_samples = 100,   method = \"sapp_2014_1\",   std_dev = NULL,   factors = FALSE,   keep_truth = FALSE )  sim_noise(   num_samples,   num_vars,   cov_type = \"exchangeable\",   outcome = \"none\",   num_classes = 2,   cov_param = 0 )  sim_logistic(num_samples, eqn, correlation = 0, keep_truth = FALSE)  sim_multinomial(   num_samples,   eqn_1,   eqn_2,   eqn_3,   correlation = 0,   keep_truth = FALSE )"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate datasets — sim_classification","text":"num_samples Number data points simulate. method character string simulation method. classification, single current option \"caret\". regression, values can \"sapp_2014_1\", \"sapp_2014_2\", \"van_der_laan_2007_1\", \"van_der_laan_2007_2\". See Details . intercept intercept linear predictor. num_linear Number diminishing linear effects. keep_truth logical: true outcome value retained data? , column name .truth. std_dev Gaussian distribution standard deviation residuals. Default values shown Details. factors single logical whether binary indicators encoded factors . num_vars Number noise predictors create. cov_type multivariate normal correlation structure predictors. Possible values \"exchangeable\" \"toeplitz\". outcome single character string type independent outcome simulated (). default value \"none\" produces extra columns. Using \"classification\" generate class column num_classes values, equally distributed. value \"regression\" results outcome column contains independent standard normal values. num_classes outcome = \"classification\", number classes simulate. cov_param single numeric value exchangeable correlation value base Toeplitz structure. See Details . eqn, eqn_1, eqn_2, eqn_3 R expression  (one sided) formula involves variables B used compute linear predictor. External objects used symbols; see examples use external objects equations. correlation single numeric value correlation variables B.","code":""},{"path":[]},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"specific-regression-and-classification-methods","dir":"Reference","previous_headings":"","what":"Specific Regression and Classification methods","title":"Simulate datasets — sim_classification","text":"functions provide several supervised simulation methods (one unsupervised). Learn method:","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-caret-","dir":"Reference","previous_headings":"","what":"method = \"caret\"","title":"Simulate datasets — sim_classification","text":"simulated classification problem two classes, originally implemented caret::twoClassSim() numeric predictors. predictors simulated different sets. First, two multivariate normal predictors (denoted two_factor_1 two_factor_2) created correlation 0.65. change log-odds using main effects interaction: intercept parameter simulation can used control amount class imbalance. second set effects linear coefficients alternate signs sequence values 2.5 0.25. example, four predictors set, contribution log-odds (Note column names may change based value num_linear). third set nonlinear function single predictor ranging [0, 1] called non_linear_1 : fourth set informative predictors copied one Friedman's systems use two predictors (non_linear_2 non_linear_3): effects added model log-odds.","code":"intercept - 4 * two_factor_1 + 4 * two_factor_2 + 2 * two_factor_1 * two_factor_2 -2.5 * linear_1 + 1.75 * linear_2 -1.00 * linear_3 + 0.25 * linear_4 (non_linear_1^3) + 2 * exp(-6 * (non_linear_1 - 0.3)^2) 2 * sin(non_linear_2 * non_linear_3)"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-sapp-","dir":"Reference","previous_headings":"","what":"method = \"sapp_2014_1\"","title":"Simulate datasets — sim_classification","text":"regression simulation Sapp et al. (2014). 20 independent Gaussian random predictors mean zero variance 9. prediction equation : error Gaussian mean zero variance 9.","code":"predictor_01 + sin(predictor_02) + log(abs(predictor_03)) +    predictor_04^2 + predictor_05 * predictor_06 +    ifelse(predictor_07 * predictor_08 * predictor_09 < 0, 1, 0) +    ifelse(predictor_10 > 0, 1, 0) + predictor_11 * ifelse(predictor_11 > 0, 1, 0) +    sqrt(abs(predictor_12)) + cos(predictor_13) + 2 * predictor_14 + abs(predictor_15) +    ifelse(predictor_16 < -1, 1, 0) + predictor_17 * ifelse(predictor_17 < -1, 1, 0) -    2 * predictor_18 - predictor_19 * predictor_20"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-sapp--1","dir":"Reference","previous_headings":"","what":"method = \"sapp_2014_2\"","title":"Simulate datasets — sim_classification","text":"regression simulation also Sapp et al. (2014). 200 independent Gaussian predictors mean zero variance 16. prediction equation intercept one identical linear effects log(abs(predictor)). error Gaussian mean zero variance 25.","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-van-der-laan-","dir":"Reference","previous_headings":"","what":"method = \"van_der_laan_2007_1\"","title":"Simulate datasets — sim_classification","text":"regression simulation van der Laan et al. (2007) ten random Bernoulli variables 40% probability value one. true regression equation : error term standard normal.","code":"2 * predictor_01 * predictor_10 + 4 * predictor_02 * predictor_07 +     3 * predictor_04 * predictor_05 - 5 * predictor_06 * predictor_10 +     3 * predictor_08 * predictor_09 + predictor_01 * predictor_02 * predictor_04 -     2 * predictor_07 * (1 - predictor_06) * predictor_02 * predictor_09 -     4 * (1 - predictor_10) * predictor_01 * (1 - predictor_04)"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-van-der-laan--1","dir":"Reference","previous_headings":"","what":"method = \"van_der_laan_2007_2\"","title":"Simulate datasets — sim_classification","text":"another regression simulation van der Laan et al. (2007)  twenty Gaussians mean zero variance 16. prediction equation : error term also Gaussian mean zero variance 16.","code":"predictor_01 * predictor_02 + predictor_10^2 - predictor_03 * predictor_17 -     predictor_15 * predictor_04 + predictor_09 * predictor_05 + predictor_19 -     predictor_20^2 + predictor_09 * predictor_08"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"method-hooker-","dir":"Reference","previous_headings":"","what":"method = \"hooker_2004\"","title":"Simulate datasets — sim_classification","text":"Hooker (2004) Sorokina al (2008) used following: Predictors 1, 2, 3, 6, 7, 9 standard uniform others uniform [0.6, 1.0]. errors normal mean zero default standard deviation 0.25.","code":"pi ^ (predictor_01 * predictor_02) * sqrt( 2 * predictor_03 ) -     asin(predictor_04) + log(predictor_03  + predictor_05) -    (predictor_09 / predictor_10) * sqrt (predictor_07 / predictor_08) -     predictor_02 * predictor_07"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"sim-noise-","dir":"Reference","previous_headings":"","what":"sim_noise()","title":"Simulate datasets — sim_classification","text":"function simulates number random normal variables mean zero. values can independent cov_param = 0. Otherwise values multivariate normal non-diagonal covariance matrices. cov_type = \"exchangeable\", structure unit variances covariances cov_param. cov_type = \"toeplitz\", covariances exponential pattern (see example ).","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"logistic-simulation","dir":"Reference","previous_headings":"","what":"Logistic simulation","title":"Simulate datasets — sim_classification","text":"sim_logistic() provides flexible interface simulating logistic regression model two multivariate normal variables B (zero mean, unit variances correlation determined correlation argument). example, using eqn = + B specify true probability event class levels outcome column \"one\" \"two\".","code":"prob = 1 / (1 + exp(A + B))"},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"multinomial-simulation","dir":"Reference","previous_headings":"","what":"Multinomial simulation","title":"Simulate datasets — sim_classification","text":"sim_multinomial() can generate data classes \"one\", \"two\", \"three\" based values arguments eqn_1, eqn_2, eqn_3, respectfully. Like sim_logistic() equations use predictors B. individual equations evaluated exponentiated. , values , row data, normalized add one. probabilities passed stats::rmultinom() generate outcome values.","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simulate datasets — sim_classification","text":"Van der Laan, M. J., Polley, E. C., & Hubbard, . E. (2007). Super learner. Statistical applications genetics molecular biology, 6(1). DOI: 10.2202/1544-6115.1309. Sapp, S., van der Laan, M. J., & Canny, J. (2014). Subsemble: ensemble method combining subset-specific algorithm fits. Journal applied statistics, 41(6), 1247-1259. DOI: 10.1080/02664763.2013.864263 Hooker, G. (2004, August). Discovering additive structure black box functions. Proceedings tenth ACM SIGKDD international conference Knowledge discovery data mining (pp. 575-580). DOI: 10.1145/1014052.1014122 Sorokina, D., Caruana, R., Riedewald, M., & Fink, D. (2008, July). Detecting statistical interactions additive groves trees. Proceedings 25th international conference Machine learning (pp. 1000-1007). DOI: 10.1145/1390156.1390282","code":""},{"path":"https://modeldata.tidymodels.org/reference/sim_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate datasets — sim_classification","text":"","code":"set.seed(1) sim_regression(100) #> # A tibble: 100 × 21 #>    outcome predictor_01 predictor_02 predictor_03 predictor_04 #>      <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1    8.49       -1.88        -1.86        1.23          2.68  #>  2   19.3         0.551        0.126       5.07         -3.14  #>  3   57.7        -2.51        -2.73        4.76          5.91  #>  4   -8.41        4.79         0.474      -0.993        -1.15  #>  5   43.0         0.989       -1.96       -6.86          4.96  #>  6   72.3        -2.46         5.30        7.49          4.54  #>  7   -3.36        1.46         2.15        2.00          0.249 #>  8   -3.82        2.21         2.73        1.62          1.70  #>  9   22.7         1.73         1.15       -0.0402       -3.07  #> 10   25.7        -0.916        5.05        1.53          0.969 #> # ℹ 90 more rows #> # ℹ 16 more variables: predictor_05 <dbl>, predictor_06 <dbl>, #> #   predictor_07 <dbl>, predictor_08 <dbl>, predictor_09 <dbl>, #> #   predictor_10 <dbl>, predictor_11 <dbl>, predictor_12 <dbl>, #> #   predictor_13 <dbl>, predictor_14 <dbl>, predictor_15 <dbl>, #> #   predictor_16 <dbl>, predictor_17 <dbl>, predictor_18 <dbl>, #> #   predictor_19 <dbl>, predictor_20 <dbl> sim_classification(100) #> # A tibble: 100 × 16 #>    class  two_factor_1 two_factor_2 non_linear_1 non_linear_2 non_linear_3 #>    <fct>         <dbl>        <dbl>        <dbl>        <dbl>        <dbl> #>  1 class…      -2.27        -1.18         -0.245       0.888        0.354  #>  2 class…      -0.537        0.420         0.621       0.170        0.374  #>  3 class…       3.23         2.39          0.163       0.957        0.840  #>  4 class…       3.42         0.236         0.110       0.788        0.134  #>  5 class…       0.571       -0.100        -0.487       0.377        0.541  #>  6 class…      -1.61        -0.0701        0.393       0.789        0.515  #>  7 class…       2.74         2.51         -0.751       0.459        0.931  #>  8 class…       0.0763      -0.679         0.307       0.220        0.771  #>  9 class…       0.0591      -2.35          0.402       0.566        0.712  #> 10 class…      -1.39        -2.10         -0.887       0.0154       0.0784 #> # ℹ 90 more rows #> # ℹ 10 more variables: linear_01 <dbl>, linear_02 <dbl>, linear_03 <dbl>, #> #   linear_04 <dbl>, linear_05 <dbl>, linear_06 <dbl>, linear_07 <dbl>, #> #   linear_08 <dbl>, linear_09 <dbl>, linear_10 <dbl>  # Flexible logistic regression simulation if (rlang::is_installed(\"ggplot2\")) {   library(dplyr)   library(ggplot2)    sim_logistic(1000, ~ .1 + 2 * A - 3 * B + 1 * A *B, corr = .7) %>%     ggplot(aes(A, B, col = class)) +     geom_point(alpha = 1/2) +     coord_equal()    f_xor <- ~ 10 * xor(A > 0, B < 0)   # or   f_xor <- rlang::expr(10 * xor(A > 0, B < 0))    sim_logistic(1000, f_xor, keep_truth = TRUE) %>%     ggplot(aes(A, B, col = class)) +     geom_point(alpha = 1/2) +     coord_equal() +     theme_bw() } #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union   ## How to use external symbols:  a_coef <- 2 # splice the value in using rlang's !! operator lp_eqn <- rlang::expr(!!a_coef * A+B) lp_eqn #> 2 * A + B sim_logistic(5, lp_eqn) #> # A tibble: 5 × 3 #>        A       B class #>    <dbl>   <dbl> <fct> #> 1 -0.315  0.990  one   #> 2  0.964 -0.0664 one   #> 3  1.16   0.258  one   #> 4  1.09  -0.621  one   #> 5  2.65  -0.776  one    # Flexible multinomial regression simulation if (rlang::is_installed(\"ggplot2\")) {  } #> NULL"},{"path":"https://modeldata.tidymodels.org/reference/small_fine_foods.html","id":null,"dir":"Reference","previous_headings":"","what":"Fine foods example data — small_fine_foods","title":"Fine foods example data — small_fine_foods","text":"Fine foods example data","code":""},{"path":"https://modeldata.tidymodels.org/reference/small_fine_foods.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fine foods example data — small_fine_foods","text":"https://snap.stanford.edu/data/web-FineFoods.html","code":""},{"path":"https://modeldata.tidymodels.org/reference/small_fine_foods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fine foods example data — small_fine_foods","text":"training_data,testing_data tibbles","code":""},{"path":"https://modeldata.tidymodels.org/reference/small_fine_foods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fine foods example data — small_fine_foods","text":"data Amazon, describe \"dataset consists reviews fine foods amazon. data span period 10 years, including ~500,000 reviews October 2012. Reviews include product user information, ratings, plaintext review.\" subset data contained split training test set. training set sampled 10 products retained individual reviews. Since reviews within products correlated, recommend resampling data using leave-one-product-approach. test set sampled 500 products included training set selected single review random . column product, column text review, factor column class variable. outcome whether reviewer gave product 5-star rating .","code":""},{"path":"https://modeldata.tidymodels.org/reference/small_fine_foods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fine foods example data — small_fine_foods","text":"","code":"data(small_fine_foods) str(training_data) #> tibble [4,000 × 3] (S3: tbl_df/tbl/data.frame) #>  $ product: chr [1:4000] \"B000J0LSBG\" \"B000EYLDYE\" \"B0026LIO9A\" \"B00473P8SK\" ... #>  $ review : chr [1:4000] \"this stuff is  not stuffing  its  not good at all  save your money\" \"I absolutely LOVE this dried fruit.  LOVE IT.  Whenever I have a craving for something sweet, I can usually rip\"| __truncated__ \"GREAT DEAL, CONVENIENT TOO.  Much cheaper than WalMart and I don't need to lug it home, it appears on my doorst\"| __truncated__ \"Great flavor, we go through a ton of this sauce! I discovered it in a local grocery store and then was happy to\"| __truncated__ ... #>  $ score  : Factor w/ 2 levels \"great\",\"other\": 2 1 1 1 1 1 2 1 1 1 ... str(testing_data) #> tibble [1,000 × 3] (S3: tbl_df/tbl/data.frame) #>  $ product: chr [1:1000] \"B005GXFP60\" \"B000G7V394\" \"B004WJAULO\" \"B003D4MBOS\" ... #>  $ review : chr [1:1000] \"These are the best tasting gummy fruits I have ever eaten. Can't stop eating them and the flavors are great.\" \"I have been a consumer of Snyders hard sourdough pretzels for over 12 years.  For a while I could find them loc\"| __truncated__ \"This tastes so bad, I'm considering throwing it away.  But I'll probably punish myself for buying 3 boxes of 18\"| __truncated__ \"This product is way too pricey to have so little chocolate taste. The predominate flavor is grape which isn't o\"| __truncated__ ... #>  $ score  : Factor w/ 2 levels \"great\",\"other\": 1 1 2 2 1 2 2 1 1 2 ..."},{"path":"https://modeldata.tidymodels.org/reference/solubility_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Solubility predictions from MARS model — solubility_test","title":"Solubility predictions from MARS model — solubility_test","text":"Solubility predictions MARS model","code":""},{"path":"https://modeldata.tidymodels.org/reference/solubility_test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Solubility predictions from MARS model — solubility_test","text":"Kuhn, M., Johnson, K. (2013) Applied Predictive Modeling, Springer","code":""},{"path":"https://modeldata.tidymodels.org/reference/solubility_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solubility predictions from MARS model — solubility_test","text":"solubility_test data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/solubility_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solubility predictions from MARS model — solubility_test","text":"solubility data Kuhn Johnson (2013), data test set results MARS model. observed solubility (column solubility) model results (prediction) contained data.","code":""},{"path":"https://modeldata.tidymodels.org/reference/solubility_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solubility predictions from MARS model — solubility_test","text":"","code":"data(solubility_test) str(solubility_test) #> 'data.frame':\t316 obs. of  2 variables: #>  $ solubility: num  0.93 0.85 0.81 0.74 0.61 0.58 0.57 0.56 0.52 0.45 ... #>  $ prediction: num  0.368 -0.15 -0.505 0.54 -0.479 ..."},{"path":"https://modeldata.tidymodels.org/reference/stackoverflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual Stack Overflow Developer Survey Data — stackoverflow","title":"Annual Stack Overflow Developer Survey Data — stackoverflow","text":"Annual Stack Overflow Developer Survey Data","code":""},{"path":"https://modeldata.tidymodels.org/reference/stackoverflow.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual Stack Overflow Developer Survey Data — stackoverflow","text":"Julia Silge, Supervised Machine Learning Case Studies R https://supervised-ml-course.netlify.com/chapter2 Raw data: https://insights.stackoverflow.com/survey/","code":""},{"path":"https://modeldata.tidymodels.org/reference/stackoverflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annual Stack Overflow Developer Survey Data — stackoverflow","text":"stackoverflow tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/stackoverflow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Annual Stack Overflow Developer Survey Data — stackoverflow","text":"data collection 5,594 data points collected developers. data used try predict works remotely (used source listed ).","code":""},{"path":"https://modeldata.tidymodels.org/reference/stackoverflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Annual Stack Overflow Developer Survey Data — stackoverflow","text":"","code":"data(stackoverflow) str(stackoverflow) #> tibble [5,594 × 21] (S3: tbl_df/tbl/data.frame) #>  $ Country                             : Factor w/ 5 levels \"Canada\",\"Germany\",..: 4 5 5 2 3 5 5 2 5 2 ... #>  $ Salary                              : num [1:5594] 100000 130000 175000 64516 6636 ... #>  $ YearsCodedJob                       : int [1:5594] 20 20 16 4 1 1 13 4 7 17 ... #>  $ OpenSource                          : num [1:5594] 0 1 0 0 0 0 0 1 1 1 ... #>  $ Hobby                               : num [1:5594] 1 1 1 0 1 1 1 0 1 1 ... #>  $ CompanySizeNumber                   : num [1:5594] 5000 1000 10000 1000 5000 20 20 5000 20 20 ... #>  $ Remote                              : Factor w/ 2 levels \"Remote\",\"Not remote\": 1 1 2 2 2 2 2 2 2 2 ... #>  $ CareerSatisfaction                  : int [1:5594] 8 9 7 9 5 8 7 7 8 9 ... #>  $ Data_scientist                      : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Database_administrator              : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Desktop_applications_developer      : num [1:5594] 0 0 0 0 0 0 0 0 1 1 ... #>  $ Developer_with_stats_math_background: num [1:5594] 0 0 0 0 0 0 0 0 0 1 ... #>  $ DevOps                              : num [1:5594] 0 1 0 0 0 0 0 0 0 0 ... #>  $ Embedded_developer                  : num [1:5594] 1 1 0 0 0 0 0 0 0 0 ... #>  $ Graphic_designer                    : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Graphics_programming                : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Machine_learning_specialist         : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Mobile_developer                    : num [1:5594] 0 0 0 0 0 0 0 0 1 0 ... #>  $ Quality_assurance_engineer          : num [1:5594] 0 1 0 0 0 0 0 0 0 0 ... #>  $ Systems_administrator               : num [1:5594] 0 0 0 0 0 0 0 0 0 0 ... #>  $ Web_developer                       : num [1:5594] 0 1 1 1 1 1 1 1 0 0 ..."},{"path":"https://modeldata.tidymodels.org/reference/steroidogenic_toxicity.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","title":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","text":"set vitro assays used quantify risk reproductive toxicity via disruption steroidogenic pathways.","code":""},{"path":"https://modeldata.tidymodels.org/reference/steroidogenic_toxicity.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","text":"Maglich, J. M., Kuhn, M., Chapin, R. E., & Pletcher, M. T. (2014). just hormones: H295R cells predictors reproductive toxicity. Reproductive Toxicology, 45, 77-86.","code":""},{"path":"https://modeldata.tidymodels.org/reference/steroidogenic_toxicity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","text":"tibble columns class: factor(levels: toxic nontoxic) cyp_11a1: numeric cyp_11b1: numeric cyp_11b2: numeric cyp_17a1: numeric cyp_19a1: numeric cyp_21a1: numeric hsd3b2: numeric star: numeric progesterone: numeric testosterone: numeric dhea: numeric cortisol: numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/steroidogenic_toxicity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","text":"H295R cells used measure effect two sets assay results. first includes set protein measurements : cytochrome P450 enzymes (\"cyp\"s), STAR, 3BHSD2. second include hormone measurements DHEA, progesterone, testosterone, cortisol. Columns: class: factor (levels: 'toxic' 'nontoxic') cyp_11a1: numeric cyp_11b1: numeric cyp_11b2: numeric cyp_17a1: numeric cyp_19a1: numeric cyp_21a1: numeric hsd3b2: numeric star: numeric progesterone: numeric testosterone: numeric dhea: numeric cortisol: numeric","code":""},{"path":"https://modeldata.tidymodels.org/reference/steroidogenic_toxicity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicting steroidogenic toxicity with assay data — steroidogenic_toxicity","text":"","code":"data(steroidogenic_toxicity) str(steroidogenic_toxicity) #> tibble [162 × 13] (S3: tbl_df/tbl/data.frame) #>  $ class       : Factor w/ 2 levels \"toxic\",\"nontoxic\": 2 1 2 1 2 2 1 2 1 1 ... #>  $ cyp_11a1    : num [1:162] 0.716 0.827 1.258 1.717 1.039 ... #>  $ cyp_11b1    : num [1:162] 0.954 5.011 1.005 NA 1.328 ... #>  $ cyp_11b2    : num [1:162] 1.239 2.307 0.919 NA 0.841 ... #>  $ cyp_17a1    : num [1:162] 0.907 1.591 1.296 2.439 0.999 ... #>  $ cyp_19a1    : num [1:162] 1.21 11.68 1.52 479.25 1.34 ... #>  $ cyp_21a1    : num [1:162] 0.876 5.447 1.67 8 1.643 ... #>  $ hsd3b2      : num [1:162] 0.984 0.514 2.017 3.898 1.799 ... #>  $ star        : num [1:162] 0.908 1.385 1.669 4.051 1.188 ... #>  $ progesterone: num [1:162] 61.53 6.42 48.63 90.8 60.02 ... #>  $ testosterone: num [1:162] 80.4 35.5 83 48.1 87.3 ... #>  $ dhea        : num [1:162] 75.6 21.9 71.2 30.3 80.9 ... #>  $ cortisol    : num [1:162] NA NA 83.81 4.87 89.91 ..."},{"path":"https://modeldata.tidymodels.org/reference/tate_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Tate Gallery modern artwork metadata — tate_text","title":"Tate Gallery modern artwork metadata — tate_text","text":"Metadata artist, title, year created recent artworks owned Tate Gallery. artworks created 1990 included, metadata source last updated 2014. Tate Gallery provides data requests users respectful guidelines use.","code":""},{"path":"https://modeldata.tidymodels.org/reference/tate_text.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Tate Gallery modern artwork metadata — tate_text","text":"https://github.com/tategallery/collection https://www.tate.org.uk/","code":""},{"path":"https://modeldata.tidymodels.org/reference/tate_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tate Gallery modern artwork metadata — tate_text","text":"tate_text tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/tate_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tate Gallery modern artwork metadata — tate_text","text":"","code":"data(tate_text) str(tate_text) #> tibble [4,284 × 5] (S3: tbl_df/tbl/data.frame) #>  $ id    : num [1:4284] 21926 20472 20474 20473 20513 ... #>  $ artist: Factor w/ 701 levels \"Absalon\",\"Abts, Tomma\",..: 1 29 29 29 29 32 41 49 53 57 ... #>  $ title : chr [1:4284] \"Proposals for a Habitat\" \"Michael\" \"Geoffrey\" \"Jake\" ... #>  $ medium: Factor w/ 1033 levels \"100 digital prints on paper, ink on paper and wall text\",..: 921 288 288 288 567 567 135 1018 561 740 ... #>  $ year  : num [1:4284] 1990 1990 1990 1990 1990 1990 1990 1990 1990 1990 ..."},{"path":"https://modeldata.tidymodels.org/reference/taxi.html","id":null,"dir":"Reference","previous_headings":"","what":"Chicago taxi data set — taxi","title":"Chicago taxi data set — taxi","text":"data set containing information subset taxi trips city Chicago 2022.","code":""},{"path":"https://modeldata.tidymodels.org/reference/taxi.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Chicago taxi data set — taxi","text":"https://data.cityofchicago.org/Transportation/Taxi-Trips/wrvz-psew","code":""},{"path":"https://modeldata.tidymodels.org/reference/taxi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Chicago taxi data set — taxi","text":"tibble","code":""},{"path":"https://modeldata.tidymodels.org/reference/taxi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Chicago taxi data set — taxi","text":"source data originally described linked City Chicago data portal. data exported pre-processed subset motivated modeling problem predicting whether rider tip . tip Whether rider left tip. factor levels \"yes\" \"\". distance trip distance, odometer miles. company taxi company, factor. Companies occurred times binned \"\". local Whether trip's starting ending locations community. See source data community area values. dow day week trip began, factor. month month trip began, factor. hour hour day trip began, numeric.","code":""},{"path":"https://modeldata.tidymodels.org/reference/taxi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chicago taxi data set — taxi","text":"","code":"# \\donttest{ taxi #> # A tibble: 10,000 × 7 #>    tip   distance company                      local dow   month  hour #>    <fct>    <dbl> <fct>                        <fct> <fct> <fct> <int> #>  1 yes      17.2  Chicago Independents         no    Thu   Feb      16 #>  2 yes       0.88 City Service                 yes   Thu   Mar       8 #>  3 yes      18.1  other                        no    Mon   Feb      18 #>  4 yes      20.7  Chicago Independents         no    Mon   Apr       8 #>  5 yes      12.2  Chicago Independents         no    Sun   Mar      21 #>  6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23 #>  7 yes      17.5  Flash Cab                    no    Fri   Mar      12 #>  8 yes      17.7  other                        no    Sun   Jan       6 #>  9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12 #> 10 yes       1.47 City Service                 no    Tue   Mar      14 #> # ℹ 9,990 more rows # }"},{"path":"https://modeldata.tidymodels.org/reference/two_class_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Two class data — two_class_dat","title":"Two class data — two_class_dat","text":"Two class data","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two class data — two_class_dat","text":"two_class_dat data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_dat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two class data — two_class_dat","text":"artificial data two predictors (B) factor outcome variable (Class).","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two class data — two_class_dat","text":"","code":"data(two_class_dat) str(two_class_dat) #> tibble [791 × 3] (S3: tbl_df/tbl/data.frame) #>  $ A    : num [1:791] 2.07 2.02 1.69 3.43 2.88 ... #>  $ B    : num [1:791] 1.63 1.04 1.37 1.98 1.98 ... #>  $ Class: Factor w/ 2 levels \"Class1\",\"Class2\": 1 1 2 2 1 2 2 2 1 2 ..."},{"path":"https://modeldata.tidymodels.org/reference/two_class_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Two class predictions — two_class_example","title":"Two class predictions — two_class_example","text":"Two class predictions","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two class predictions — two_class_example","text":"two_class_example data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two class predictions — two_class_example","text":"data test set form model built two classes (\"Class1\" \"Class2\"). columns true predicted classes column probabilities class.","code":""},{"path":"https://modeldata.tidymodels.org/reference/two_class_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two class predictions — two_class_example","text":"","code":"data(two_class_example) str(two_class_example) #> 'data.frame':\t500 obs. of  4 variables: #>  $ truth    : Factor w/ 2 levels \"Class1\",\"Class2\": 2 1 2 1 2 1 1 1 2 2 ... #>  $ Class1   : num  0.00359 0.67862 0.11089 0.73516 0.01624 ... #>  $ Class2   : num  0.996 0.321 0.889 0.265 0.984 ... #>  $ predicted: Factor w/ 2 levels \"Class1\",\"Class2\": 2 1 2 1 2 1 1 1 2 2 ..."},{"path":"https://modeldata.tidymodels.org/reference/wa_churn.html","id":null,"dir":"Reference","previous_headings":"","what":"Watson churn data — wa_churn","title":"Watson churn data — wa_churn","text":"Watson churn data","code":""},{"path":"https://modeldata.tidymodels.org/reference/wa_churn.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Watson churn data — wa_churn","text":"IBM Watson Analytics https://ibm.co/2sOvyvy","code":""},{"path":"https://modeldata.tidymodels.org/reference/wa_churn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Watson churn data — wa_churn","text":"wa_churn data frame","code":""},{"path":"https://modeldata.tidymodels.org/reference/wa_churn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Watson churn data — wa_churn","text":"data downloaded IBM Watson site (see ) September 2018. data contain factor whether customer churned . Alternatively, tenure column presumably contains information long customer account. survival analysis can done column using churn outcome censoring information. data dictionary can found source website.","code":""},{"path":"https://modeldata.tidymodels.org/reference/wa_churn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Watson churn data — wa_churn","text":"","code":"data(wa_churn) str(wa_churn) #> tibble [7,043 × 20] (S3: tbl_df/tbl/data.frame) #>  $ churn            : Factor w/ 2 levels \"Yes\",\"No\": 2 2 1 2 1 1 2 2 1 2 ... #>  $ female           : num [1:7043] 1 0 0 0 1 1 0 1 1 0 ... #>  $ senior_citizen   : int [1:7043] 0 0 0 0 0 0 0 0 0 0 ... #>  $ partner          : num [1:7043] 1 0 0 0 0 0 0 0 1 0 ... #>  $ dependents       : num [1:7043] 0 0 0 0 0 0 1 0 0 1 ... #>  $ tenure           : int [1:7043] 1 34 2 45 2 8 22 10 28 62 ... #>  $ phone_service    : num [1:7043] 0 1 1 0 1 1 1 0 1 1 ... #>  $ multiple_lines   : Factor w/ 3 levels \"No\",\"No phone service\",..: 2 1 1 2 1 3 3 2 3 1 ... #>  $ internet_service : Factor w/ 3 levels \"DSL\",\"Fiber optic\",..: 1 1 1 1 2 2 2 1 2 1 ... #>  $ online_security  : Factor w/ 3 levels \"No\",\"No internet service\",..: 1 3 3 3 1 1 1 3 1 3 ... #>  $ online_backup    : Factor w/ 3 levels \"No\",\"No internet service\",..: 3 1 3 1 1 1 3 1 1 3 ... #>  $ device_protection: Factor w/ 3 levels \"No\",\"No internet service\",..: 1 3 1 3 1 3 1 1 3 1 ... #>  $ tech_support     : Factor w/ 3 levels \"No\",\"No internet service\",..: 1 1 1 3 1 1 1 1 3 1 ... #>  $ streaming_tv     : Factor w/ 3 levels \"No\",\"No internet service\",..: 1 1 1 1 1 3 3 1 3 1 ... #>  $ streaming_movies : Factor w/ 3 levels \"No\",\"No internet service\",..: 1 1 1 1 1 3 1 1 3 1 ... #>  $ contract         : Factor w/ 3 levels \"Month-to-month\",..: 1 2 1 2 1 1 1 1 1 2 ... #>  $ paperless_billing: num [1:7043] 1 0 1 0 1 1 1 0 1 0 ... #>  $ payment_method   : Factor w/ 4 levels \"Bank transfer (automatic)\",..: 3 4 4 1 3 3 2 4 3 1 ... #>  $ monthly_charges  : num [1:7043] 29.9 57 53.9 42.3 70.7 ... #>  $ total_charges    : num [1:7043] 29.9 1889.5 108.2 1840.8 151.7 ..."},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-140","dir":"Changelog","previous_headings":"","what":"modeldata 1.4.0","title":"modeldata 1.4.0","text":"CRAN release: 2024-06-19 Added cat_adoption data set.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-130","dir":"Changelog","previous_headings":"","what":"modeldata 1.3.0","title":"modeldata 1.3.0","text":"CRAN release: 2024-01-21 Added deliveries data set.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-120","dir":"Changelog","previous_headings":"","what":"modeldata 1.2.0","title":"modeldata 1.2.0","text":"CRAN release: 2023-08-09 New data sets chem_proc_yield (regression) hepatic_injury_qsar (ordinal classification) hotel_rates (regression) ischemic_stroke (classification) leaf_id_flavia (classification) permeability_qsar (regression) steroidogenic_toxicity (classification) taxi (classification) simulation equation Hooker (2004) slightly incorrect corrected.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-110","dir":"Changelog","previous_headings":"","what":"modeldata 1.1.0","title":"modeldata 1.1.0","text":"CRAN release: 2023-01-25 Added keep_truth argument supervised simulation functions. retains column defines error free simulated value outcome. numeric column called .truth. simulation functions added: sim_logistic() sim_multinomial() added. method Hooker (2004) added sim_regression().","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-101","dir":"Changelog","previous_headings":"","what":"modeldata 1.0.1","title":"modeldata 1.0.1","text":"CRAN release: 2022-09-06 Small update fix HTML CRAN.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-100","dir":"Changelog","previous_headings":"","what":"modeldata 1.0.0","title":"modeldata 1.0.0","text":"CRAN release: 2022-07-01 Added set regression classification simulation functions (#273). Remove OkCupid data, including text data, privacy concerns.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-011","dir":"Changelog","previous_headings":"","what":"modeldata 0.1.1","title":"modeldata 0.1.1","text":"CRAN release: 2021-07-14 Add Tate Gallery modern artwork metadata. Deprecate OkCupid data, including text data, concerns around data ability identify individuals.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-010","dir":"Changelog","previous_headings":"","what":"modeldata 0.1.0","title":"modeldata 0.1.0","text":"CRAN release: 2020-10-22 Add grant acceptance data Kuhn Johnson (2013) (Applied Predictive Modeling). crickets data Chapter 3 tmwr.org added.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-002","dir":"Changelog","previous_headings":"","what":"modeldata 0.0.2","title":"modeldata 0.0.2","text":"CRAN release: 2020-06-22 bivariate dataset missing, corrected (@mdogucu, #5). Ames penguin data sets added.","code":""},{"path":"https://modeldata.tidymodels.org/news/index.html","id":"modeldata-001","dir":"Changelog","previous_headings":"","what":"modeldata 0.0.1","title":"modeldata 0.0.1","text":"CRAN release: 2019-12-06 Added NEWS.md file track changes package.","code":""}]
